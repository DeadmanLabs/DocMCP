{
  "type": "interface",
  "name": "IBakedModelExtension",
  "qualified_name": "net.neoforged.neoforge.client.extensions.IBakedModelExtension",
  "package": "net.neoforged.neoforge.client.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Extension interface for BakedModel .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "self",
      "modifiers": [
        "private"
      ],
      "return_type": "BakedModel",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getQuads",
      "modifiers": [
        "default"
      ],
      "return_type": "List < BakedQuad >",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "side",
          "type": "Direction",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "rand",
          "type": "RandomSource",
          "annotations": []
        },
        {
          "name": "data",
          "type": "ModelData",
          "annotations": []
        },
        {
          "name": "renderType",
          "type": "RenderType",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "A null RenderType is used for the breaking overlay as well as non-standard rendering, so models should return all their quads.",
      "deprecated": false
    },
    {
      "name": "useAmbientOcclusion",
      "modifiers": [
        "default"
      ],
      "return_type": "TriState",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "data",
          "type": "ModelData",
          "annotations": []
        },
        {
          "name": "renderType",
          "type": "RenderType",
          "annotations": []
        }
      ],
      "description": "Controls the AO behavior for all quads of this model. The default behavior is to use AO unless the block emits light, TriState.TRUE and TriState.FALSE force AO to be enabled and disabled respectively, regardless of the block emitting light or not. BakedQuad.hasAmbientOcclusion() can be used to disable AO for a specific quad even if this method says otherwise. This method cannot force AO if the global smooth lighting video setting is disabled.",
      "deprecated": false
    },
    {
      "name": "applyTransform",
      "modifiers": [
        "default"
      ],
      "return_type": "BakedModel",
      "parameters": [
        {
          "name": "transformType",
          "type": "ItemDisplayContext",
          "annotations": []
        },
        {
          "name": "poseStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "applyLeftHandTransform",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Applies a transform for the given invalid reference ItemTransforms.TransformType and applyLeftHandTransform , and returns the model to be rendered.",
      "deprecated": false
    },
    {
      "name": "getModelData",
      "modifiers": [
        "default"
      ],
      "return_type": "ModelData",
      "parameters": [
        {
          "name": "level",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "modelData",
          "type": "ModelData",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getParticleIcon",
      "modifiers": [
        "default"
      ],
      "return_type": "TextureAtlasSprite",
      "parameters": [
        {
          "name": "data",
          "type": "ModelData",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRenderTypes",
      "modifiers": [
        "default"
      ],
      "return_type": "ChunkRenderTypeSet",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "rand",
          "type": "RandomSource",
          "annotations": []
        },
        {
          "name": "data",
          "type": "ModelData",
          "annotations": []
        }
      ],
      "description": "Gets the set of render types to use when drawing this block in the level. Supported types are those returned by RenderType.chunkBufferLayers() . By default, defers query to ItemBlockRenderTypes .",
      "deprecated": false
    },
    {
      "name": "getRenderTypes",
      "modifiers": [
        "default"
      ],
      "return_type": "List < RenderType >",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "fabulous",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Gets an ordered list of render types to use when drawing this item. All render types using the DefaultVertexFormat.NEW_ENTITY format are supported. This method will only be called on the models returned by getRenderPasses(ItemStack, boolean) . By default, defers query to ItemBlockRenderTypes .",
      "deprecated": false
    },
    {
      "name": "getRenderPasses",
      "modifiers": [
        "default"
      ],
      "return_type": "List < BakedModel >",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "fabulous",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Gets an ordered list of baked models used to render this model as an item. Each of those models' render types will be queried via getRenderTypes(ItemStack, boolean) . By default, returns the model itself.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.6-neoforge/net/neoforged/neoforge/client/extensions/IBakedModelExtension.html"
}