{
  "type": "class",
  "name": "ClientCommandHandler",
  "qualified_name": "net.neoforged.neoforge.client.ClientCommandHandler",
  "package": "net.neoforged.neoforge.client",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "LOGGER",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": "org.apache.logging.log4j.Logger",
      "description": "",
      "deprecated": false
    },
    {
      "name": "commands",
      "modifiers": [
        "private",
        "static"
      ],
      "type": "com.mojang.brigadier.CommandDispatcher< CommandSourceStack >",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ClientCommandHandler",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "init",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "handleClientPlayerLogin",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "event",
          "type": "ClientPlayerNetworkEvent.LoggingIn",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "mergeServerCommands",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "com.mojang.brigadier.CommandDispatcher< SharedSuggestionProvider >",
      "parameters": [
        {
          "name": "serverCommands",
          "type": "com.mojang.brigadier.CommandDispatcher< SharedSuggestionProvider >",
          "annotations": []
        },
        {
          "name": "buildContext",
          "type": "CommandBuildContext",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDispatcher",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "com.mojang.brigadier.CommandDispatcher< CommandSourceStack >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getSource",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ClientCommandSourceStack",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "copy",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "sourceNode",
          "type": "com.mojang.brigadier.tree.CommandNode<S>",
          "annotations": []
        },
        {
          "name": "resultNode",
          "type": "com.mojang.brigadier.tree.CommandNode<S>",
          "annotations": []
        }
      ],
      "description": "Creates a deep copy of the sourceNode while keeping the redirects referring to the old command tree",
      "deprecated": false
    },
    {
      "name": "runCommand",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "command",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "Always try to execute the cached parsing of a typed command as a clientside command. Requires that the execute field of the commands to be set to send to server so that they aren't treated as client command's that do nothing. Commands.performCommand(ParseResults, String) for reference",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.6-neoforge/net/neoforged/neoforge/client/ClientCommandHandler.html"
}