{
  "type": "class",
  "name": "FluidHandlerItemStack",
  "qualified_name": "net.neoforged.neoforge.fluids.capability.templates.FluidHandlerItemStack",
  "package": "net.neoforged.neoforge.fluids.capability.templates",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "FluidHandlerItemStack is a template capability provider for ItemStacks. Data is stored in a SimpleFluidContent component. This class allows an ItemStack to contain any partial level of fluid up to its capacity, unlike FluidHandlerItemStackSimple Additional examples are provided to enable consumable fluid containers (see FluidHandlerItemStack.Consumable ), fluid containers with different empty and full items (see FluidHandlerItemStack.SwapEmpty ,",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "componentType",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "Supplier < DataComponentType < SimpleFluidContent >>",
      "description": "",
      "deprecated": false
    },
    {
      "name": "container",
      "modifiers": [
        "protected"
      ],
      "type": "ItemStack",
      "description": "",
      "deprecated": false
    },
    {
      "name": "capacity",
      "modifiers": [
        "protected"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "FluidHandlerItemStack",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "componentType",
          "type": "Supplier < DataComponentType < SimpleFluidContent >>",
          "annotations": []
        },
        {
          "name": "container",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "capacity",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getContainer",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [],
      "description": "Description copied from interface: IFluidHandlerItem",
      "deprecated": false
    },
    {
      "name": "getFluid",
      "modifiers": [
        "public"
      ],
      "return_type": "FluidStack",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setFluid",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getTanks",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "getFluidInTank",
      "modifiers": [
        "public"
      ],
      "return_type": "FluidStack",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "getTankCapacity",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "isFluidValid",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "fill",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "resource",
          "type": "FluidStack",
          "annotations": []
        },
        {
          "name": "doFill",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "drain",
      "modifiers": [
        "public"
      ],
      "return_type": "FluidStack",
      "parameters": [
        {
          "name": "resource",
          "type": "FluidStack",
          "annotations": []
        },
        {
          "name": "action",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "drain",
      "modifiers": [
        "public"
      ],
      "return_type": "FluidStack",
      "parameters": [
        {
          "name": "maxDrain",
          "type": "int",
          "annotations": []
        },
        {
          "name": "action",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "canFillFluidType",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canDrainFluidType",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setContainerToEmpty",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Override this method for special handling. Can be used to swap out or destroy the container.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.6-neoforge/net/neoforged/neoforge/fluids/capability/templates/FluidHandlerItemStack.html"
}