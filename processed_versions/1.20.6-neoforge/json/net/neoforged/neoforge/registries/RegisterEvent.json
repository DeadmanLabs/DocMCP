{
  "type": "class",
  "name": "RegisterEvent",
  "qualified_name": "net.neoforged.neoforge.registries.RegisterEvent",
  "package": "net.neoforged.neoforge.registries",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "Fired for each registry when it is ready to have modded objects registered. This event is fired for all builtin registries from vanilla (see BuiltInRegistries ) and mods. This event is fired on the mod-specific event bus, on both logical sides.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "registryKey",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "ResourceKey <? extends Registry <?>>",
      "description": "",
      "deprecated": false
    },
    {
      "name": "registry",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "Registry <?>",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "RegisterEvent",
      "modifiers": [],
      "parameters": [
        {
          "name": "registryKey",
          "type": "ResourceKey <? extends Registry <?>>",
          "annotations": []
        },
        {
          "name": "registry",
          "type": "Registry <?>",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "register",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "registryKey",
          "type": "ResourceKey <? extends Registry <T>>",
          "annotations": []
        },
        {
          "name": "name",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "valueSupplier",
          "type": "Supplier <T>",
          "annotations": []
        }
      ],
      "description": "Registers the value with the given name to the stored registry if the provided registry key matches this event's registry key.",
      "deprecated": false
    },
    {
      "name": "register",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "registryKey",
          "type": "ResourceKey <? extends Registry <T>>",
          "annotations": []
        },
        {
          "name": "consumer",
          "type": "Consumer < RegisterEvent.RegisterHelper <T>>",
          "annotations": []
        }
      ],
      "description": "Calls the provided consumer with a register helper if the provided registry key matches this event's registry key.",
      "deprecated": false
    },
    {
      "name": "getRegistryKey",
      "modifiers": [
        "public"
      ],
      "return_type": "ResourceKey <? extends Registry <?>>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRegistry",
      "modifiers": [
        "public"
      ],
      "return_type": "Registry <?>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRegistry",
      "modifiers": [
        "public"
      ],
      "return_type": "@Nullable Registry <T>",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceKey <? extends Registry <T>>",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.6-neoforge/net/neoforged/neoforge/registries/RegisterEvent.html"
}