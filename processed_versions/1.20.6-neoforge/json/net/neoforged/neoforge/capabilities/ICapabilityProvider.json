{
  "type": "interface",
  "name": "T>",
  "qualified_name": "net.neoforged.neoforge.capabilities.T>",
  "package": "net.neoforged.neoforge.capabilities",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getCapability",
      "modifiers": [],
      "return_type": "T",
      "parameters": [
        {
          "name": "object",
          "type": "O",
          "annotations": []
        },
        {
          "name": "context",
          "type": "C",
          "annotations": []
        }
      ],
      "description": "Returns the capability, or null if not available. For block entities only : If a previously returned capability is not valid anymore, or if a new capability is available, ILevelExtension.invalidateCapabilities(BlockPos) MUST be called to notify the caches (see IBlockCapabilityProvider.getCapability(net.minecraft.world.level.Level, net.minecraft.core.BlockPos, net.minecraft.world.level.block.state.BlockState, net.minecraft.world.level.block.entity.BlockEntity, C) ).",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.6-neoforge/net/neoforged/neoforge/capabilities/ICapabilityProvider.html"
}