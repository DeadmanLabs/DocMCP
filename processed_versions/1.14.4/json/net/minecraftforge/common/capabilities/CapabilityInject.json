{
  "type": "annotation",
  "name": "Type",
  "qualified_name": "Type",
  "package": "",
  "modifiers": [],
  "annotations": [],
  "description": "When placed on a FIELD, the field will be set to an instance of Capability once that capability is registered. That field must be static and be able to hold a instance of 'Capability' Example: @CapabilityInject(IExampleCapability.class) private static final Capability TEST_CAP = null; When placed on a METHOD, the method will be invoked once the capability is registered. This allows you to have a 'enable features' callback. It MUST have one parameter of type 'Capability; Example: @CapabilityInject(IExampleCapability.class) private static void capRegistered(Capability cap) {} Warning : Capability injections are run in the thread that the capablity is registered. Due to parallel mod loading, this can potentially be off of the main thread.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.14.4/net/minecraftforge/common/capabilities/CapabilityInject.html"
}