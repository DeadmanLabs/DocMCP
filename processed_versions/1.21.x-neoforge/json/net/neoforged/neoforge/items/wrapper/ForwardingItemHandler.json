{
  "type": "class",
  "name": "ForwardingItemHandler",
  "qualified_name": "net.neoforged.neoforge.items.wrapper.ForwardingItemHandler",
  "package": "net.neoforged.neoforge.items.wrapper",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "An IItemHandler that delegates each method to another IItemHandler . The Supplier is re-evaluated each time a method is called.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "delegate",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "Supplier < IItemHandler >",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ForwardingItemHandler",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "delegate",
          "type": "IItemHandler",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "ForwardingItemHandler",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "delegate",
          "type": "Supplier < IItemHandler >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getSlots",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    },
    {
      "name": "getStackInSlot",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [
        {
          "name": "slot",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    },
    {
      "name": "insertItem",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [
        {
          "name": "slot",
          "type": "int",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "simulate",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    },
    {
      "name": "extractItem",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [
        {
          "name": "slot",
          "type": "int",
          "annotations": []
        },
        {
          "name": "amount",
          "type": "int",
          "annotations": []
        },
        {
          "name": "simulate",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    },
    {
      "name": "getSlotLimit",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "slot",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    },
    {
      "name": "isItemValid",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "slot",
          "type": "int",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IItemHandler",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/items/wrapper/ForwardingItemHandler.html"
}