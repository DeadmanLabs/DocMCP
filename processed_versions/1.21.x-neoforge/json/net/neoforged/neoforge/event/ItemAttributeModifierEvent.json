{
  "type": "class",
  "name": "ItemAttributeModifierEvent",
  "qualified_name": "net.neoforged.neoforge.event.ItemAttributeModifierEvent",
  "package": "net.neoforged.neoforge.event",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This event is fired when the attributes for an item stack are queried (for any reason) through IItemStackExtension.getAttributeModifiers() . This event is fired regardless of if the stack has DataComponents.ATTRIBUTE_MODIFIERS or not. If your attribute should be ignored when attributes are overridden, you can check for the presence of the component. This event may be fired on both the logical server and logical client.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "stack",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "ItemStack",
      "description": "",
      "deprecated": false
    },
    {
      "name": "defaultModifiers",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "ItemAttributeModifiers",
      "description": "",
      "deprecated": false
    },
    {
      "name": "builder",
      "modifiers": [
        "private"
      ],
      "type": "ItemAttributeModifierEvent.ItemAttributeModifiersBuilder",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ItemAttributeModifierEvent",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "defaultModifiers",
          "type": "ItemAttributeModifiers",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getItemStack",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [],
      "description": "Returns the item stack whose attribute modifiers are being computed.",
      "deprecated": false
    },
    {
      "name": "getDefaultModifiers",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemAttributeModifiers",
      "parameters": [],
      "description": "Returns the default attribute modifiers before changes made by the event.",
      "deprecated": false
    },
    {
      "name": "getModifiers",
      "modifiers": [
        "public"
      ],
      "return_type": "List < ItemAttributeModifiers.Entry >",
      "parameters": [],
      "description": "Returns an unmodifiable view of the attribute modifier entries. Do not use the returned value to create an ItemAttributeModifiers since the underlying list is not immutable. If you need an ItemAttributeModifiers , you may need to call build()",
      "deprecated": false
    },
    {
      "name": "addModifier",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "attribute",
          "type": "Holder < Attribute >",
          "annotations": []
        },
        {
          "name": "modifier",
          "type": "AttributeModifier",
          "annotations": []
        },
        {
          "name": "slot",
          "type": "EquipmentSlotGroup",
          "annotations": []
        }
      ],
      "description": "Adds a new attribute modifier to the given stack. Two modifiers with the same id may not exist for the same attribute, and this method will fail if one exists.",
      "deprecated": false
    },
    {
      "name": "removeModifier",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "attribute",
          "type": "Holder < Attribute >",
          "annotations": []
        },
        {
          "name": "id",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "Removes an attribute modifier for the target attribute by id",
      "deprecated": false
    },
    {
      "name": "replaceModifier",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "attribute",
          "type": "Holder < Attribute >",
          "annotations": []
        },
        {
          "name": "modifier",
          "type": "AttributeModifier",
          "annotations": []
        },
        {
          "name": "slot",
          "type": "EquipmentSlotGroup",
          "annotations": []
        }
      ],
      "description": "Adds a new attribute modifier to the given stack, optionally replacing any existing modifiers with the same id.",
      "deprecated": false
    },
    {
      "name": "removeIf",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "condition",
          "type": "Predicate < ItemAttributeModifiers.Entry >",
          "annotations": []
        }
      ],
      "description": "Removes modifiers based on a condition.",
      "deprecated": false
    },
    {
      "name": "removeAllModifiersFor",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "attribute",
          "type": "Holder < Attribute >",
          "annotations": []
        }
      ],
      "description": "Removes all modifiers for the given attribute.",
      "deprecated": false
    },
    {
      "name": "clearModifiers",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Removes all modifiers for all attributes.",
      "deprecated": false
    },
    {
      "name": "build",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemAttributeModifiers",
      "parameters": [],
      "description": "Builds a new ItemAttributeModifiers with the results of this event, returning the default modifiers if no changes were made.",
      "deprecated": false
    },
    {
      "name": "getBuilder",
      "modifiers": [
        "private"
      ],
      "return_type": "ItemAttributeModifierEvent.ItemAttributeModifiersBuilder",
      "parameters": [],
      "description": "Returns the builder used for adjusting the attribute modifiers, creating it if it does not already exist.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/event/ItemAttributeModifierEvent.html"
}