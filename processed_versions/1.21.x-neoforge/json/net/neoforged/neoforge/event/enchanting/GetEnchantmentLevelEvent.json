{
  "type": "class",
  "name": "GetEnchantmentLevelEvent",
  "qualified_name": "net.neoforged.neoforge.event.enchanting.GetEnchantmentLevelEvent",
  "package": "net.neoforged.neoforge.event.enchanting",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This event is fired whenever the enchantment level of a particular item is requested for gameplay purposes. It is called from invalid reference IItemStackExtension#getEnchantmentLevel(Enchantment) and invalid reference IItemStackExtension#getAllEnchantments() . It is not fired for interactions with NBT, which means these changes will not reflect in the item tooltip.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "stack",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "ItemStack",
      "description": "",
      "deprecated": false
    },
    {
      "name": "enchantments",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "ItemEnchantments.Mutable",
      "description": "",
      "deprecated": false
    },
    {
      "name": "targetEnchant",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "@Nullable Holder < Enchantment >",
      "description": "",
      "deprecated": false
    },
    {
      "name": "lookup",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "HolderLookup.RegistryLookup < Enchantment >",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "GetEnchantmentLevelEvent",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "enchantments",
          "type": "ItemEnchantments.Mutable",
          "annotations": []
        },
        {
          "name": "targetEnchant",
          "type": "Holder < Enchantment >",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "lookup",
          "type": "HolderLookup.RegistryLookup < Enchantment >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getStack",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemStack",
      "parameters": [],
      "description": "Returns the item stack that is being queried against.",
      "deprecated": false
    },
    {
      "name": "getEnchantments",
      "modifiers": [
        "public"
      ],
      "return_type": "ItemEnchantments.Mutable",
      "parameters": [],
      "description": "Returns the mutable enchantment->level map.",
      "deprecated": false
    },
    {
      "name": "getTargetEnchant",
      "modifiers": [
        "public"
      ],
      "return_type": "@Nullable Holder < Enchantment >",
      "parameters": [],
      "description": "This method returns the specific enchantment being queried from invalid reference IItemStackExtension#getEnchantmentLevel(Enchantment) . If this is value is present, you only need to adjust the level of that enchantment. If this value is null, then the event was fired from invalid reference IItemStackExtension#getAllEnchantments() and all enchantments should be populated.",
      "deprecated": false
    },
    {
      "name": "isTargetting",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "ench",
          "type": "Holder < Enchantment >",
          "annotations": []
        }
      ],
      "description": "Helper method around getTargetEnchant() that checks if the target is the specified enchantment, or if the target is null.",
      "deprecated": false
    },
    {
      "name": "isTargetting",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "ench",
          "type": "ResourceKey < Enchantment >",
          "annotations": []
        }
      ],
      "description": "Helper method around getTargetEnchant() that checks if the target is the specified enchantment, or if the target is null.",
      "deprecated": false
    },
    {
      "name": "getHolder",
      "modifiers": [
        "public"
      ],
      "return_type": "Optional < Holder.Reference < Enchantment >>",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceKey < Enchantment >",
          "annotations": []
        }
      ],
      "description": "Attempts to resolve a Holder.Reference for a target enchantment. Since enchantments are data, they are not guaranteed to exist.",
      "deprecated": false
    },
    {
      "name": "getLookup",
      "modifiers": [
        "public"
      ],
      "return_type": "HolderLookup.RegistryLookup < Enchantment >",
      "parameters": [],
      "description": "Returns the underlying registry lookup, which can be used to access enchantment Holders.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/event/enchanting/GetEnchantmentLevelEvent.html"
}