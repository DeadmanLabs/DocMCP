{
  "type": "class",
  "name": "EventHooks",
  "qualified_name": "net.neoforged.neoforge.event.EventHooks",
  "package": "net.neoforged.neoforge.event",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "NO_SPAWNS",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": "WeightedRandomList < MobSpawnSettings.SpawnerData >",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "EventHooks",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "onMultiBlockPlace",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "blockSnapshots",
          "type": "List < BlockSnapshot >",
          "annotations": []
        },
        {
          "name": "direction",
          "type": "Direction",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onBlockPlace",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "blockSnapshot",
          "type": "BlockSnapshot",
          "annotations": []
        },
        {
          "name": "direction",
          "type": "Direction",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onNeighborNotify",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "BlockEvent.NeighborNotifyEvent",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "notifiedSides",
          "type": "EnumSet < Direction >",
          "annotations": []
        },
        {
          "name": "forceRedstoneUpdate",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "doPlayerHarvestCheck",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getBreakSpeed",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "float",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "original",
          "type": "float",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerDestroyItem",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "hand",
          "type": "InteractionHand",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "checkSpawnPlacements",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entityType",
          "type": "EntityType <?>",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevelAccessor",
          "annotations": []
        },
        {
          "name": "spawnType",
          "type": "MobSpawnType",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "random",
          "type": "RandomSource",
          "annotations": []
        },
        {
          "name": "defaultResult",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Internal, should only be called via SpawnPlacements.checkSpawnRules(net.minecraft.world.entity.EntityType<T>, net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.entity.MobSpawnType, net.minecraft.core.BlockPos, net.minecraft.util.RandomSource) .",
      "deprecated": false
    },
    {
      "name": "checkSpawnPosition",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "mob",
          "type": "Mob",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevelAccessor",
          "annotations": []
        },
        {
          "name": "spawnType",
          "type": "MobSpawnType",
          "annotations": []
        }
      ],
      "description": "Checks if the current position of the passed mob is valid for spawning, by firing MobSpawnEvent.PositionCheck . The default check is to perform the logical and of Mob.checkSpawnRules(net.minecraft.world.level.LevelAccessor, net.minecraft.world.entity.MobSpawnType) and Mob.checkSpawnObstruction(net.minecraft.world.level.LevelReader) .",
      "deprecated": false
    },
    {
      "name": "checkSpawnPositionSpawner",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "mob",
          "type": "Mob",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevelAccessor",
          "annotations": []
        },
        {
          "name": "spawnType",
          "type": "MobSpawnType",
          "annotations": []
        },
        {
          "name": "spawnData",
          "type": "SpawnData",
          "annotations": []
        },
        {
          "name": "spawner",
          "type": "BaseSpawner",
          "annotations": []
        }
      ],
      "description": "Specialized variant of checkSpawnPosition(net.minecraft.world.entity.Mob, net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.entity.MobSpawnType) for spawners, as they have slightly different checks, and pass through the BaseSpawner to the event.",
      "deprecated": false
    },
    {
      "name": "finalizeMobSpawn",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "@Nullable SpawnGroupData",
      "parameters": [
        {
          "name": "mob",
          "type": "Mob",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevelAccessor",
          "annotations": []
        },
        {
          "name": "difficulty",
          "type": "DifficultyInstance",
          "annotations": []
        },
        {
          "name": "spawnType",
          "type": "MobSpawnType",
          "annotations": []
        },
        {
          "name": "spawnData",
          "type": "SpawnGroupData",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "Finalizes the spawn of a mob by firing the FinalizeSpawnEvent and calling Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) with the result. Mods should call this method in place of calling Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) , unless calling super from within an override. Vanilla calls to Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) are replaced with calls to this method via coremod, so calls to this method will not show in an IDE. When interfacing with this event, write all code as normal, and replace the call to Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) with a call to this method. As an example, the following code block: var zombie = new Zombie(level); zombie.finalizeSpawn(level, difficulty, spawnType, spawnData); level.tryAddFreshEntityWithPassengers(zombie); if (zombie.isAddedToWorld()) { // Do stuff with your new zombie } Would become: var zombie = new Zombie(level); EventHooks.finalizeMobSpawn(zombie, level, difficulty, spawnType, spawnData); level.tryAddFreshEntityWithPassengers(zombie); if (zombie.isAddedToWorld()) { // Do stuff with your new zombie } The only code that changes is the Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) call.",
      "deprecated": false
    },
    {
      "name": "finalizeMobSpawnSpawner",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "FinalizeSpawnEvent",
      "parameters": [
        {
          "name": "mob",
          "type": "Mob",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevelAccessor",
          "annotations": []
        },
        {
          "name": "difficulty",
          "type": "DifficultyInstance",
          "annotations": []
        },
        {
          "name": "spawnType",
          "type": "MobSpawnType",
          "annotations": []
        },
        {
          "name": "spawnData",
          "type": "SpawnGroupData",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "spawner",
          "type": "IOwnedSpawner",
          "annotations": []
        },
        {
          "name": "def",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Finalizes the spawn of a mob by firing the FinalizeSpawnEvent and calling Mob.finalizeSpawn(net.minecraft.world.level.ServerLevelAccessor, net.minecraft.world.DifficultyInstance, net.minecraft.world.entity.MobSpawnType, net.minecraft.world.entity.SpawnGroupData) with the result. This method is separate since mob spawners perform special finalizeSpawn handling when NBT data is present, but we still want to fire the event. This overload is also the only way to pass through an IOwnedSpawner instance.",
      "deprecated": false
    },
    {
      "name": "firePlayerSpawnPhantoms",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "PlayerSpawnPhantomsEvent",
      "parameters": [
        {
          "name": "player",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "Called from PhantomSpawner.tick(net.minecraft.server.level.ServerLevel, boolean, boolean) just before the spawn conditions for phantoms are evaluated. Fires the PlayerSpawnPhantomsEvent and returns the event.",
      "deprecated": false
    },
    {
      "name": "checkMobDespawn",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "mob",
          "type": "Mob",
          "annotations": []
        }
      ],
      "description": "Fires MobDespawnEvent and returns true if the default logic should be ignored.",
      "deprecated": false
    },
    {
      "name": "getItemBurnTime",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "burnTime",
          "type": "int",
          "annotations": []
        },
        {
          "name": "recipeType",
          "type": "RecipeType <?>",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getExperienceDrop",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "attackingPlayer",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "originalExperience",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getMaxSpawnClusterSize",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "entity",
          "type": "Mob",
          "annotations": []
        }
      ],
      "description": "Fires SpawnClusterSizeEvent and returns the size as a result of the event. Called in NaturalSpawner.spawnCategoryForPosition(net.minecraft.world.entity.MobCategory, net.minecraft.server.level.ServerLevel, net.minecraft.core.BlockPos) where Mob.getMaxSpawnClusterSize() would normally be called.",
      "deprecated": false
    },
    {
      "name": "getPlayerDisplayName",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "Component",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "username",
          "type": "Component",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getPlayerTabListDisplayName",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "Component",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireFluidPlaceBlockEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "BlockState",
      "parameters": [
        {
          "name": "level",
          "type": "LevelAccessor",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "liquidPos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onItemTooltip",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ItemTooltipEvent",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "entityPlayer",
          "type": "Player",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "list",
          "type": "List < Component >",
          "annotations": []
        },
        {
          "name": "flags",
          "type": "TooltipFlag",
          "annotations": []
        },
        {
          "name": "context",
          "type": "Item.TooltipContext",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEntityStruckByLightning",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "bolt",
          "type": "LightningBolt",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onItemUseStart",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "duration",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onItemUseTick",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "duration",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onUseItemStop",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "duration",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onItemUseFinish",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ItemStack",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "duration",
          "type": "int",
          "annotations": []
        },
        {
          "name": "result",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onStartEntityTracking",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onStopEntityTracking",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerLoadingEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "playerDirectory",
          "type": "File",
          "annotations": []
        },
        {
          "name": "uuidString",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerSavingEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "playerDirectory",
          "type": "File",
          "annotations": []
        },
        {
          "name": "uuidString",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerLoadingEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "playerFileData",
          "type": "PlayerDataStorage",
          "annotations": []
        },
        {
          "name": "uuidString",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onToolUse",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "@Nullable BlockState",
      "parameters": [
        {
          "name": "originalState",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "context",
          "type": "UseOnContext",
          "annotations": []
        },
        {
          "name": "toolAction",
          "type": "ToolAction",
          "annotations": []
        },
        {
          "name": "simulate",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireBonemealEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "BonemealEvent",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "Called when bone meal (or equivalent) is used on a block. Fires the BonemealEvent and returns the event.",
      "deprecated": false
    },
    {
      "name": "onPlaySoundAtEntity",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "PlayLevelSoundEvent.AtEntity",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "name",
          "type": "Holder < SoundEvent >",
          "annotations": []
        },
        {
          "name": "category",
          "type": "SoundSource",
          "annotations": []
        },
        {
          "name": "volume",
          "type": "float",
          "annotations": []
        },
        {
          "name": "pitch",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlaySoundAtPosition",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "PlayLevelSoundEvent.AtPosition",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "x",
          "type": "double",
          "annotations": []
        },
        {
          "name": "y",
          "type": "double",
          "annotations": []
        },
        {
          "name": "z",
          "type": "double",
          "annotations": []
        },
        {
          "name": "name",
          "type": "Holder < SoundEvent >",
          "annotations": []
        },
        {
          "name": "category",
          "type": "SoundSource",
          "annotations": []
        },
        {
          "name": "volume",
          "type": "float",
          "annotations": []
        },
        {
          "name": "pitch",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onItemExpire",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "entity",
          "type": "ItemEntity",
          "annotations": []
        },
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireItemPickupPre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ItemEntityPickupEvent.Pre",
      "parameters": [
        {
          "name": "itemEntity",
          "type": "ItemEntity",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "Called in ItemEntity.playerTouch(Player) before any other processing occurs. Fires ItemEntityPickupEvent.Pre and returns the event.",
      "deprecated": false
    },
    {
      "name": "fireItemPickupPost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "itemEntity",
          "type": "ItemEntity",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "copy",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "Called in ItemEntity.playerTouch(Player) after an item was successfully picked up. Fires ItemEntityPickupEvent.Post .",
      "deprecated": false
    },
    {
      "name": "canMountEntity",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entityMounting",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "entityBeingMounted",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "isMounting",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onAnimalTame",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "animal",
          "type": "Animal",
          "annotations": []
        },
        {
          "name": "tamer",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canPlayerStartSleeping",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "com.mojang.datafixers.util.Either< Player.BedSleepingProblem , Unit >",
      "parameters": [
        {
          "name": "player",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "vanillaResult",
          "type": "com.mojang.datafixers.util.Either< Player.BedSleepingProblem , Unit >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerWakeup",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "wakeImmediately",
          "type": "boolean",
          "annotations": []
        },
        {
          "name": "updateLevel",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerFall",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "distance",
          "type": "float",
          "annotations": []
        },
        {
          "name": "multiplier",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerSpawnSet",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "levelKey",
          "type": "ResourceKey < Level >",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "forced",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerClone",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "oldPlayer",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "wasDeath",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onExplosionStart",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "explosion",
          "type": "Explosion",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onExplosionDetonate",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "explosion",
          "type": "Explosion",
          "annotations": []
        },
        {
          "name": "list",
          "type": "List < Entity >",
          "annotations": []
        },
        {
          "name": "diameter",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getExplosionKnockback",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "Vec3",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "explosion",
          "type": "Explosion",
          "annotations": []
        },
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "initialVelocity",
          "type": "Vec3",
          "annotations": []
        }
      ],
      "description": "To be called when an explosion has calculated the knockback velocity but has not yet added the knockback to the entity caught in blast.",
      "deprecated": false
    },
    {
      "name": "onCreateWorldSpawn",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "settings",
          "type": "ServerLevelData",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onLivingHeal",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "float",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "amount",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPotionAttemptBrew",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "stacks",
          "type": "NonNullList < ItemStack >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPotionBrewed",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "brewingItemStacks",
          "type": "NonNullList < ItemStack >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPlayerBrewedPotion",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canEntityContinueSleeping",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "sleeper",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "problem",
          "type": "Player.BedSleepingProblem",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "Checks if a sleeping entity can continue sleeping with the given sleeping problem.",
      "deprecated": false
    },
    {
      "name": "onArrowNock",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "InteractionResultHolder < ItemStack >",
      "parameters": [
        {
          "name": "item",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "hand",
          "type": "InteractionHand",
          "annotations": []
        },
        {
          "name": "hasAmmo",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onArrowLoose",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "charge",
          "type": "int",
          "annotations": []
        },
        {
          "name": "hasAmmo",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onProjectileImpact",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "projectile",
          "type": "Projectile",
          "annotations": []
        },
        {
          "name": "ray",
          "type": "HitResult",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "loadLootTable",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "@Nullable LootTable",
      "parameters": [
        {
          "name": "name",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "table",
          "type": "LootTable",
          "annotations": []
        }
      ],
      "description": "Fires the LootTableLoadEvent for non-empty loot tables and returns the table if the event was not canceled and the table was not set to LootTable.EMPTY in the event. Otherwise returns null which maps to an empty Optional in LootDataType.deserialize(ResourceLocation, DynamicOps, Object)",
      "deprecated": false
    },
    {
      "name": "canCreateFluidSource",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "description": "Checks if a fluid is allowed to create a fluid source. This fires the CreateFluidSourceEvent . By default, a fluid can create a source if it returns true to IFluidStateExtension.canConvertToSource(Level, BlockPos)",
      "deprecated": false
    },
    {
      "name": "onTrySpawnPortal",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "Optional < PortalShape >",
      "parameters": [
        {
          "name": "level",
          "type": "LevelAccessor",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "size",
          "type": "Optional < PortalShape >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEnchantmentLevelSet",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "enchantRow",
          "type": "int",
          "annotations": []
        },
        {
          "name": "power",
          "type": "int",
          "annotations": []
        },
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "enchantmentLevel",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEntityDestroyBlock",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canEntityGrief",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "entity",
          "type": "Entity",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "Checks if an entity can perform a griefing action. If an entity is provided, this method fires EntityMobGriefingEvent . If an entity is not provided, this method returns the value of GameRules.RULE_MOBGRIEFING .",
      "deprecated": false
    },
    {
      "name": "fireBlockGrowFeature",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "BlockGrowFeatureEvent",
      "parameters": [
        {
          "name": "level",
          "type": "LevelAccessor",
          "annotations": []
        },
        {
          "name": "rand",
          "type": "RandomSource",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "holder",
          "type": "Holder < ConfiguredFeature <?, ?>>",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "Fires the BlockGrowFeatureEvent and returns the event object.",
      "deprecated": false
    },
    {
      "name": "alterGround",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "AlterGroundEvent.StateProvider",
      "parameters": [
        {
          "name": "ctx",
          "type": "TreeDecorator.Context",
          "annotations": []
        },
        {
          "name": "positions",
          "type": "List < BlockPos >",
          "annotations": []
        },
        {
          "name": "provider",
          "type": "AlterGroundEvent.StateProvider",
          "annotations": []
        }
      ],
      "description": "Fires the AlterGroundEvent and retrieves the resulting AlterGroundEvent.StateProvider .",
      "deprecated": false
    },
    {
      "name": "fireChunkTicketLevelUpdated",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "chunkPos",
          "type": "long",
          "annotations": []
        },
        {
          "name": "oldTicketLevel",
          "type": "int",
          "annotations": []
        },
        {
          "name": "newTicketLevel",
          "type": "int",
          "annotations": []
        },
        {
          "name": "chunkHolder",
          "type": "ChunkHolder",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireChunkWatch",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "chunk",
          "type": "LevelChunk",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireChunkSent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "chunk",
          "type": "LevelChunk",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "fireChunkUnWatch",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "chunkpos",
          "type": "ChunkPos",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPistonMovePre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "direction",
          "type": "Direction",
          "annotations": []
        },
        {
          "name": "extending",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPistonMovePost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "direction",
          "type": "Direction",
          "annotations": []
        },
        {
          "name": "extending",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onSleepFinished",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "long",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "newTime",
          "type": "long",
          "annotations": []
        },
        {
          "name": "minTime",
          "type": "long",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onResourceReload",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "List < PreparableReloadListener >",
      "parameters": [
        {
          "name": "serverResources",
          "type": "ReloadableServerResources",
          "annotations": []
        },
        {
          "name": "registryAccess",
          "type": "RegistryAccess",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onCommandRegister",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "dispatcher",
          "type": "com.mojang.brigadier.CommandDispatcher< CommandSourceStack >",
          "annotations": []
        },
        {
          "name": "environment",
          "type": "Commands.CommandSelection",
          "annotations": []
        },
        {
          "name": "context",
          "type": "CommandBuildContext",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getEntitySizeForge",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityEvent.Size",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "pose",
          "type": "Pose",
          "annotations": []
        },
        {
          "name": "size",
          "type": "EntityDimensions",
          "annotations": []
        },
        {
          "name": "eyeHeight",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getEntitySizeForge",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityEvent.Size",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "pose",
          "type": "Pose",
          "annotations": []
        },
        {
          "name": "oldSize",
          "type": "EntityDimensions",
          "annotations": []
        },
        {
          "name": "newSize",
          "type": "EntityDimensions",
          "annotations": []
        },
        {
          "name": "newEyeHeight",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canLivingConvert",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "outcome",
          "type": "EntityType <? extends LivingEntity >",
          "annotations": []
        },
        {
          "name": "timer",
          "type": "Consumer < Integer >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onLivingConvert",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "outcome",
          "type": "LivingEntity",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEntityTeleportCommand",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTeleportEvent.TeleportCommand",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "targetX",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetY",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetZ",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEntityTeleportSpreadPlayersCommand",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTeleportEvent.SpreadPlayersCommand",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "targetX",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetY",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetZ",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEnderTeleport",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTeleportEvent.EnderEntity",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "targetX",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetY",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetZ",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEnderPearlLand",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTeleportEvent.EnderPearl",
      "parameters": [
        {
          "name": "entity",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "targetX",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetY",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetZ",
          "type": "double",
          "annotations": []
        },
        {
          "name": "pearlEntity",
          "type": "ThrownEnderpearl",
          "annotations": []
        },
        {
          "name": "attackDamage",
          "type": "float",
          "annotations": []
        },
        {
          "name": "hitResult",
          "type": "HitResult",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onChorusFruitTeleport",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTeleportEvent.ChorusFruit",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "targetX",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetY",
          "type": "double",
          "annotations": []
        },
        {
          "name": "targetZ",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onPermissionChanged",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "gameProfile",
          "type": "com.mojang.authlib.GameProfile",
          "annotations": []
        },
        {
          "name": "newLevel",
          "type": "int",
          "annotations": []
        },
        {
          "name": "playerList",
          "type": "PlayerList",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerChangedDimensionEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "fromDim",
          "type": "ResourceKey < Level >",
          "annotations": []
        },
        {
          "name": "toDim",
          "type": "ResourceKey < Level >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerLoggedIn",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerLoggedOut",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerRespawnPositionEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "PlayerRespawnPositionEvent",
      "parameters": [
        {
          "name": "player",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "dimensionTransition",
          "type": "DimensionTransition",
          "annotations": []
        },
        {
          "name": "fromEndFight",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Called by invalid reference PlayerList#respawn(ServerPlayer, boolean) before creating the new ServerPlayer to fire the PlayerRespawnPositionEvent",
      "deprecated": false
    },
    {
      "name": "firePlayerRespawnEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "fromEndFight",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Called by invalid reference PlayerList#respawn(ServerPlayer, boolean) after creating and initializing the new ServerPlayer .",
      "deprecated": false
    },
    {
      "name": "firePlayerCraftingEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "crafted",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "craftMatrix",
          "type": "Container",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerSmeltedEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "smelted",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "firePlayerHeartTypeEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "Gui.HeartType",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "heartType",
          "type": "Gui.HeartType",
          "annotations": []
        }
      ],
      "description": "Called by Gui.HeartType.forPlayer(net.minecraft.world.entity.player.Player) to allow for modification of the displayed heart type in the health bar.",
      "deprecated": false
    },
    {
      "name": "fireEntityTickPre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "EntityTickEvent.Pre",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        }
      ],
      "description": "Fires EntityTickEvent.Pre . Called from the head of LivingEntity.tick() .",
      "deprecated": false
    },
    {
      "name": "fireEntityTickPost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        }
      ],
      "description": "Fires EntityTickEvent.Post . Called from the tail of LivingEntity.tick() .",
      "deprecated": false
    },
    {
      "name": "firePlayerTickPre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "Fires PlayerTickEvent.Pre . Called from the head of Player.tick() .",
      "deprecated": false
    },
    {
      "name": "firePlayerTickPost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        }
      ],
      "description": "Fires PlayerTickEvent.Post . Called from the tail of Player.tick() .",
      "deprecated": false
    },
    {
      "name": "fireLevelTickPre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "haveTime",
          "type": "BooleanSupplier",
          "annotations": []
        }
      ],
      "description": "Fires LevelTickEvent.Pre . Called from Minecraft.tick() and MinecraftServer.tickChildren(BooleanSupplier) just before the try block for level tick is entered.",
      "deprecated": false
    },
    {
      "name": "fireLevelTickPost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "haveTime",
          "type": "BooleanSupplier",
          "annotations": []
        }
      ],
      "description": "Fires LevelTickEvent.Post . Called from Minecraft.tick() and MinecraftServer.tickChildren(BooleanSupplier) just after the try block for level tick is exited.",
      "deprecated": false
    },
    {
      "name": "fireServerTickPre",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "haveTime",
          "type": "BooleanSupplier",
          "annotations": []
        },
        {
          "name": "server",
          "type": "MinecraftServer",
          "annotations": []
        }
      ],
      "description": "Fires ServerTickEvent.Pre . Called from the head of MinecraftServer.tickServer(BooleanSupplier) .",
      "deprecated": false
    },
    {
      "name": "fireServerTickPost",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "haveTime",
          "type": "BooleanSupplier",
          "annotations": []
        },
        {
          "name": "server",
          "type": "MinecraftServer",
          "annotations": []
        }
      ],
      "description": "Fires ServerTickEvent.Post . Called from the tail of MinecraftServer.tickServer(BooleanSupplier) .",
      "deprecated": false
    },
    {
      "name": "getPotentialSpawns",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "WeightedRandomList < MobSpawnSettings.SpawnerData >",
      "parameters": [
        {
          "name": "level",
          "type": "LevelAccessor",
          "annotations": []
        },
        {
          "name": "category",
          "type": "MobCategory",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "oldList",
          "type": "WeightedRandomList < MobSpawnSettings.SpawnerData >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onStatAward",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "StatAwardEvent",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "stat",
          "type": "Stat <?>",
          "annotations": []
        },
        {
          "name": "value",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onAdvancementEarnedEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "earned",
          "type": "AdvancementHolder",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onAdvancementProgressedEvent",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "progressed",
          "type": "AdvancementHolder",
          "annotations": []
        },
        {
          "name": "advancementProgress",
          "type": "AdvancementProgress",
          "annotations": []
        },
        {
          "name": "criterion",
          "type": "String",
          "annotations": []
        },
        {
          "name": "progressType",
          "type": "AdvancementEvent.AdvancementProgressEvent.ProgressType",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEffectRemoved",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "effect",
          "type": "Holder < MobEffect >",
          "annotations": []
        },
        {
          "name": "cure",
          "type": "EffectCure",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onEffectRemoved",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "effectInstance",
          "type": "MobEffectInstance",
          "annotations": []
        },
        {
          "name": "cure",
          "type": "EffectCure",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getEnchantmentLevelSpecific",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "level",
          "type": "int",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "ench",
          "type": "Holder < Enchantment >",
          "annotations": []
        }
      ],
      "description": "Fires GetEnchantmentLevelEvent and for a single enchantment, returning the (possibly event-modified) level.",
      "deprecated": false
    },
    {
      "name": "getAllEnchantmentLevels",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ItemEnchantments",
      "parameters": [
        {
          "name": "enchantments",
          "type": "ItemEnchantments",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "lookup",
          "type": "HolderLookup.RegistryLookup < Enchantment >",
          "annotations": []
        }
      ],
      "description": "Fires GetEnchantmentLevelEvent and for all enchantments, returning the (possibly event-modified) enchantment map.",
      "deprecated": false
    },
    {
      "name": "onCreativeModeTabBuildContents",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "tab",
          "type": "CreativeModeTab",
          "annotations": []
        },
        {
          "name": "tabKey",
          "type": "ResourceKey < CreativeModeTab >",
          "annotations": []
        },
        {
          "name": "originalGenerator",
          "type": "CreativeModeTab.DisplayItemsGenerator",
          "annotations": []
        },
        {
          "name": "params",
          "type": "CreativeModeTab.ItemDisplayParameters",
          "annotations": []
        },
        {
          "name": "output",
          "type": "CreativeModeTab.Output",
          "annotations": []
        }
      ],
      "description": "Fires the BuildCreativeModeTabContentsEvent .",
      "deprecated": false
    },
    {
      "name": "onMobSplit",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "MobSplitEvent",
      "parameters": [
        {
          "name": "parent",
          "type": "Mob",
          "annotations": []
        },
        {
          "name": "children",
          "type": "List < Mob >",
          "annotations": []
        }
      ],
      "description": "Fires the mob split event. Returns the event for cancellation checking.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/event/EventHooks.html"
}