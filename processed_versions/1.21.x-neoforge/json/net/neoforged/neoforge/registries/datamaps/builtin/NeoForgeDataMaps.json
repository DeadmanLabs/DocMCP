{
  "type": "class",
  "name": "NeoForgeDataMaps",
  "qualified_name": "net.neoforged.neoforge.registries.datamaps.builtin.NeoForgeDataMaps",
  "package": "net.neoforged.neoforge.registries.datamaps.builtin",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "Holds all data maps provided by NeoForge. These data maps are usually replacements for vanilla in-code maps, and are optionally synced so that mods can use them on the client side.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "COMPOSTABLES",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < Item , Compostable >",
      "description": "The Item data map that replaces ComposterBlock.COMPOSTABLES . The location of this data map is neoforge/data_maps/item/compostables.json , and the values are objects with 1 field: chance , a float between 0 and 1 (inclusive) - the chance that the item will add levels to the composter when composted The use of a float as the value is also possible, though discouraged in case more options are added in the future.",
      "deprecated": false
    },
    {
      "name": "FURNACE_FUELS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < Item , FurnaceFuel >",
      "description": "The Item data map that replaces AbstractFurnaceBlockEntity.getFuel() . The location of this data map is neoforge/data_maps/item/furnace_fuels.json , and the values are objects with 1 field: burn_time , a positive integer - how long the item will burn, in ticks The use of a integer as the value is also possible, though discouraged in case more options are added in the future.",
      "deprecated": false
    },
    {
      "name": "MONSTER_ROOM_MOBS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < EntityType <?>, MonsterRoomMob >",
      "description": "The EntityType data map that replaces MonsterRoomFeature.MOBS . The location of this data map is neoforge/data_maps/entity_type/monster_room_mobs.json , and the values are objects with 1 field: weight , a positive nonzero integer - the weight of this type that will be used when selecting a type for the spawner. The use of an integer as the value is also possible, though discouraged in case more options are added in the future.",
      "deprecated": false
    },
    {
      "name": "PARROT_IMITATIONS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < EntityType <?>, ParrotImitation >",
      "description": "The EntityType data map that replaces Parrot.MOB_SOUND_MAP . The location of this data map is neoforge/data_maps/entity_type/parrot_imitations.json , and the values are objects with 1 field: sound , sound event ID - the sound that the parrot will emit when imitating the mob The use of a string as the value is also possible, though discouraged in case more options are added in the future.",
      "deprecated": false
    },
    {
      "name": "RAID_HERO_GIFTS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < VillagerProfession , RaidHeroGift >",
      "description": "The VillagerProfession data map that replaces GiveGiftToHero.GIFTS . The location of this data map is neoforge/data_maps/villager_profession/raid_hero_gifts.json , and the values are objects with 1 field: loot_table , the path to the loot table that the villager gives to the player after a raid finishes",
      "deprecated": false
    },
    {
      "name": "VIBRATION_FREQUENCIES",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "DataMapType < GameEvent , VibrationFrequency >",
      "description": "The GameEvent data map that replaces VibrationSystem.VIBRATION_FREQUENCY_FOR_EVENT . The location of this data map is neoforge/data_maps/game_event/vibration_frequencies.json , and the values are objects with 1 field: frequency , an integer between 1 and 15 (inclusive) - the vibration frequency of the game event The use of an integer as the value is also possible, though discouraged in case more options are added in the future.",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "NeoForgeDataMaps",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "id",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "name",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "register",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "event",
          "type": "RegisterDataMapTypesEvent",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/registries/datamaps/builtin/NeoForgeDataMaps.html"
}