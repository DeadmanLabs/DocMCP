{
  "type": "class",
  "name": "SimpleTicket<T>",
  "qualified_name": "net.neoforged.neoforge.common.ticket.SimpleTicket<T>",
  "package": "net.neoforged.neoforge.common.ticket",
  "modifiers": [
    "public",
    "abstract",
    "class"
  ],
  "annotations": [],
  "description": "Common class for a simple ticket based system.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "masterManager",
      "modifiers": [
        "private"
      ],
      "type": "@Nullable ITicketManager < T >",
      "description": "",
      "deprecated": false
    },
    {
      "name": "dummyManagers",
      "modifiers": [
        "private"
      ],
      "type": "ITicketManager < T >[]",
      "description": "",
      "deprecated": false
    },
    {
      "name": "isValid",
      "modifiers": [
        "protected"
      ],
      "type": "boolean",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "SimpleTicket",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "setManager",
      "modifiers": [
        "public",
        "final"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "masterManager",
          "type": "ITicketManager < T >",
          "annotations": []
        },
        {
          "name": "dummyManagers",
          "type": "ITicketManager < T >...",
          "annotations": []
        }
      ],
      "description": "Internal method that sets the collection from the managing system. Should not be called if you just want to register a ticket to a system like the FarmlandWaterManager",
      "deprecated": false
    },
    {
      "name": "isValid",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [],
      "description": "Checks if your ticket is still registered in the system.",
      "deprecated": false
    },
    {
      "name": "invalidate",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Removes the ticket from the managing system. After this call, any calls to isValid() should return false unless it is registered again using validate()",
      "deprecated": false
    },
    {
      "name": "unload",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "unloadingManager",
          "type": "ITicketManager < T >",
          "annotations": []
        }
      ],
      "description": "Called by the managing system when a ticket wishes to unload all of it's tickets, e.g. on chunk unload The ticket must not remove itself from the manager that is calling the unload! The ticket must ensure that it removes itself from all of it's dummies when returning true",
      "deprecated": false
    },
    {
      "name": "validate",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Re-adds your ticket to the system.",
      "deprecated": false
    },
    {
      "name": "matches",
      "modifiers": [
        "public",
        "abstract"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "toMatch",
          "type": "T",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "forEachManager",
      "modifiers": [
        "protected",
        "final"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "consumer",
          "type": "Consumer < ITicketManager < T >>",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getMasterManager",
      "modifiers": [
        "protected",
        "final"
      ],
      "return_type": "ITicketManager < T >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDummyManagers",
      "modifiers": [
        "protected",
        "final"
      ],
      "return_type": "ITicketManager < T >[]",
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21.x-neoforge/net/neoforged/neoforge/common/ticket/SimpleTicket.html"
}