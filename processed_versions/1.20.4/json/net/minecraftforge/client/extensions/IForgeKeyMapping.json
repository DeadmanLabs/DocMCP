{
  "type": "interface",
  "name": "IForgeKeyMapping",
  "qualified_name": "net.minecraftforge.client.extensions.IForgeKeyMapping",
  "package": "net.minecraftforge.client.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Extension interface for KeyMapping .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "self",
      "modifiers": [
        "private"
      ],
      "return_type": "KeyMapping",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKey",
      "modifiers": [],
      "return_type": "InputConstants.Key",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isActiveAndMatches",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "keyCode",
          "type": "InputConstants.Key",
          "annotations": []
        }
      ],
      "description": "Returns true if the key conflict context and modifier are active and the keyCode matches this binding, false otherwise.",
      "deprecated": false
    },
    {
      "name": "setToDefault",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setKeyConflictContext",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "keyConflictContext",
          "type": "IKeyConflictContext",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKeyConflictContext",
      "modifiers": [],
      "return_type": "IKeyConflictContext",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDefaultKeyModifier",
      "modifiers": [],
      "return_type": "KeyModifier",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKeyModifier",
      "modifiers": [],
      "return_type": "KeyModifier",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setKeyModifierAndCode",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "keyModifier",
          "type": "KeyModifier",
          "annotations": []
        },
        {
          "name": "keyCode",
          "type": "InputConstants.Key",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isConflictContextAndModifierActive",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "hasKeyModifierConflict",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "other",
          "type": "KeyMapping",
          "annotations": []
        }
      ],
      "description": "Returns true when one of the bindings' key codes conflicts with the other's modifier.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.4/net/minecraftforge/client/extensions/IForgeKeyMapping.html"
}