{
  "type": "interface",
  "name": "IForgeRegistry<V>",
  "qualified_name": "net.minecraftforge.registries.IForgeRegistry<V>",
  "package": "net.minecraftforge.registries",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Main interface for the registry system. Use this to query the registry system.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getRegistryKey",
      "modifiers": [],
      "return_type": "ResourceKey < Registry < V >>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRegistryName",
      "modifiers": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "register",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "key",
          "type": "String",
          "annotations": []
        },
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "The supplied string key will be prefixed with the currently active mod's mod id. If the supplied name already has a prefix that is different, it will be used and a warning will be logged.",
      "deprecated": false
    },
    {
      "name": "register",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "containsKey",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "containsValue",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isEmpty",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getValue",
      "modifiers": [],
      "return_type": "V",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKey",
      "modifiers": [],
      "return_type": "@Nullable ResourceLocation",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDefaultKey",
      "modifiers": [],
      "return_type": "@Nullable ResourceLocation",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getResourceKey",
      "modifiers": [],
      "return_type": "@NotNull Optional < ResourceKey < V >>",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKeys",
      "modifiers": [],
      "return_type": "@NotNull Set < ResourceLocation >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getValues",
      "modifiers": [],
      "return_type": "@NotNull Collection < V >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getEntries",
      "modifiers": [],
      "return_type": "@NotNull Set < Map.Entry < ResourceKey < V >, V >>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getCodec",
      "modifiers": [],
      "return_type": "@NotNull com.mojang.serialization.Codec< V >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getHolder",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder < V >>",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceKey < V >",
          "annotations": []
        }
      ],
      "description": "This method exists purely as a stopgap for vanilla compatibility. For anything tag related, use tags() .",
      "deprecated": false
    },
    {
      "name": "getHolder",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder < V >>",
      "parameters": [
        {
          "name": "location",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "This method exists purely as a stopgap for vanilla compatibility. For anything tag related, use tags() .",
      "deprecated": false
    },
    {
      "name": "getHolder",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder < V >>",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "This method exists purely as a stopgap for vanilla compatibility. For anything tag related, use tags() .",
      "deprecated": false
    },
    {
      "name": "tags",
      "modifiers": [],
      "return_type": "@Nullable ITagManager < V >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegate",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder.Reference < V >>",
      "parameters": [
        {
          "name": "rkey",
          "type": "ResourceKey < V >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegateOrThrow",
      "modifiers": [],
      "return_type": "Holder.Reference < V >",
      "parameters": [
        {
          "name": "rkey",
          "type": "ResourceKey < V >",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegate",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder.Reference < V >>",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegateOrThrow",
      "modifiers": [],
      "return_type": "Holder.Reference < V >",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegate",
      "modifiers": [],
      "return_type": "@NotNull Optional < Holder.Reference < V >>",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDelegateOrThrow",
      "modifiers": [],
      "return_type": "Holder.Reference < V >",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getSlaveMap",
      "modifiers": [],
      "return_type": "T",
      "parameters": [
        {
          "name": "slaveMapName",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "type",
          "type": "Class <T>",
          "annotations": []
        }
      ],
      "description": "Retrieve the slave map of type T from the registry. Slave maps are maps which are dependent on registry content in some way.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.3/net/minecraftforge/registries/IForgeRegistry.html"
}