{
  "type": "class",
  "name": "LootModifier",
  "qualified_name": "net.minecraftforge.common.loot.LootModifier",
  "package": "net.minecraftforge.common.loot",
  "modifiers": [
    "public",
    "abstract",
    "class"
  ],
  "annotations": [],
  "description": "A base implementation of a Global Loot Modifier for modders to extend. Takes care of ILootCondition matching and comes with the base codec to extend.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "conditions",
      "modifiers": [
        "protected",
        "final"
      ],
      "type": "LootItemCondition []",
      "description": "",
      "deprecated": false
    },
    {
      "name": "combinedConditions",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "Predicate < LootContext >",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "LootModifier",
      "modifiers": [
        "protected"
      ],
      "parameters": [
        {
          "name": "conditionsIn",
          "type": "LootItemCondition []",
          "annotations": []
        }
      ],
      "description": "Constructs a LootModifier.",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "codecStart",
      "modifiers": [
        "protected",
        "static"
      ],
      "return_type": "com.mojang.datafixers.Products.P1<com.mojang.serialization.codecs.RecordCodecBuilder.Mu<T>, LootItemCondition []>",
      "parameters": [
        {
          "name": "instance",
          "type": "com.mojang.serialization.codecs.RecordCodecBuilder.Instance<T>",
          "annotations": []
        }
      ],
      "description": "Simplifies codec creation, especially if no other fields are added: public static final Codec<MyLootModifier> CODEC = RecordCodecBuilder.create(inst -> codecStart(inst).apply(inst, MyLootModifier::new)); Otherwise can follow this with #and() to add more fields. Examples: Forge Test Subclasses or BendingTrunkPlacer.CODEC",
      "deprecated": false
    },
    {
      "name": "apply",
      "modifiers": [
        "public",
        "final"
      ],
      "return_type": "@NotNull it.unimi.dsi.fastutil.objects.ObjectArrayList< ItemStack >",
      "parameters": [
        {
          "name": "generatedLoot",
          "type": "it.unimi.dsi.fastutil.objects.ObjectArrayList< ItemStack >",
          "annotations": []
        },
        {
          "name": "context",
          "type": "LootContext",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IGlobalLootModifier",
      "deprecated": false
    },
    {
      "name": "doApply",
      "modifiers": [
        "protected",
        "abstract"
      ],
      "return_type": "@NotNull it.unimi.dsi.fastutil.objects.ObjectArrayList< ItemStack >",
      "parameters": [
        {
          "name": "generatedLoot",
          "type": "it.unimi.dsi.fastutil.objects.ObjectArrayList< ItemStack >",
          "annotations": []
        },
        {
          "name": "context",
          "type": "LootContext",
          "annotations": []
        }
      ],
      "description": "Applies the modifier to the generated loot (all loot conditions have already been checked and have returned true).",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20.3/net/minecraftforge/common/loot/LootModifier.html"
}