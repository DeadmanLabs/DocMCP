{
  "type": "interface",
  "name": "IForgeHolderSet<T>",
  "qualified_name": "net.minecraftforge.common.extensions.IForgeHolderSet<T>",
  "package": "net.minecraftforge.common.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "addInvalidationListener",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "runnable",
          "type": "Runnable",
          "annotations": []
        }
      ],
      "description": "Adds a callback to run when this holderset's contents invalidate (i.e. because tags were rebound). The intended usage and use case is with composite holdersets that need to cache sets/list based on other holdersets, which may be mutable (because they are tag-based or themselves composite holdersets). Composite holdersets should use this to add callbacks to each of their component holdersets when constructed.",
      "deprecated": false
    },
    {
      "name": "serializationType",
      "modifiers": [
        "default"
      ],
      "return_type": "IForgeHolderSet.SerializationType",
      "parameters": [],
      "description": "What format this holderset serializes to in json/nbt/etc",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.19.4/net/minecraftforge/common/extensions/IForgeHolderSet.html"
}