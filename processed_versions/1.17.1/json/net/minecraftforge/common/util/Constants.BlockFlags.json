{
  "type": "class",
  "name": "Constants.BlockFlags",
  "qualified_name": "net.minecraftforge.common.util.Constants.BlockFlags",
  "package": "net.minecraftforge.common.util",
  "modifiers": [
    "public",
    "static",
    "class"
  ],
  "annotations": [],
  "description": "The flags used when calling LevelWriter.setBlock(BlockPos, BlockState, int) Can be found from Level.setBlock(BlockPos, BlockState, int) , Level.markAndNotifyBlock(BlockPos, LevelChunk, BlockState, BlockState, int, int) , and LevelRenderer.blockChanged(BlockGetter, BlockPos, BlockState, BlockState, int) Flags can be combined with bitwise OR",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "NOTIFY_NEIGHBORS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Calls neighborChanged on surrounding blocks (with isMoving as false). Also updates comparator output state.",
      "deprecated": false
    },
    {
      "name": "BLOCK_UPDATE",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Calls Level.sendBlockUpdated(BlockPos, BlockState, BlockState, int) . Server-side, this updates all the path-finding navigators.",
      "deprecated": false
    },
    {
      "name": "NO_RERENDER",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Stops the blocks from being marked for a render update",
      "deprecated": false
    },
    {
      "name": "RERENDER_MAIN_THREAD",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Makes the block be re-rendered immediately, on the main thread. If NO_RERENDER is set, then this will be ignored",
      "deprecated": false
    },
    {
      "name": "UPDATE_NEIGHBORS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Causes neighbor updates to be sent to all surrounding blocks (including diagonals). This in turn will call BlockBehaviour.updateIndirectNeighbourShapes(BlockState, LevelAccessor, BlockPos, int, int) on both old and new states, and Block.updateOrDestroy(BlockState, BlockState, LevelAccessor, BlockPos, int, int) on the new state.",
      "deprecated": false
    },
    {
      "name": "NO_NEIGHBOR_DROPS",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Prevents neighbor changes from spawning item drops, used by Block.updateOrDestroy(BlockState, BlockState, LevelAccessor, BlockPos, int) .",
      "deprecated": false
    },
    {
      "name": "IS_MOVING",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "Tell the block being changed that it was moved, rather than removed/replaced, the boolean value is eventually passed to BlockBehaviour.onRemove(BlockState, Level, BlockPos, BlockState, boolean) as the last parameter.",
      "deprecated": false
    },
    {
      "name": "DEFAULT",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    },
    {
      "name": "DEFAULT_AND_RERENDER",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "BlockFlags",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.17.1/net/minecraftforge/common/util/Constants.BlockFlags.html"
}