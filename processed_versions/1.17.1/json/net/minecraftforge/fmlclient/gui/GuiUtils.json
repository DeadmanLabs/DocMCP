{
  "type": "class",
  "name": "GuiUtils",
  "qualified_name": "net.minecraftforge.fmlclient.gui.GuiUtils",
  "package": "net.minecraftforge.fmlclient.gui",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This class provides several methods and constants used by the Config GUI classes.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "DEFAULT_BACKGROUND_COLOR",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    },
    {
      "name": "DEFAULT_BORDER_COLOR_START",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    },
    {
      "name": "DEFAULT_BORDER_COLOR_END",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    },
    {
      "name": "UNDO_CHAR",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "RESET_CHAR",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "VALID",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "INVALID",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "colorCodes",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "int[]",
      "description": "",
      "deprecated": false
    },
    {
      "name": "cachedTooltipStack",
      "modifiers": [
        "private",
        "static"
      ],
      "type": "ItemStack",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "GuiUtils",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getColorCode",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "c",
          "type": "char",
          "annotations": []
        },
        {
          "name": "isLighter",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "drawContinuousTexturedBox",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "matrixStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "u",
          "type": "int",
          "annotations": []
        },
        {
          "name": "v",
          "type": "int",
          "annotations": []
        },
        {
          "name": "width",
          "type": "int",
          "annotations": []
        },
        {
          "name": "height",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderSize",
          "type": "int",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "Draws a textured box of any size (smallest size is borderSize * 2 square) based on a fixed size textured box with continuous borders and filler. It is assumed that the desired texture ResourceLocation object has been bound using Minecraft.getMinecraft().getTextureManager().bindTexture(resourceLocation).",
      "deprecated": false
    },
    {
      "name": "drawContinuousTexturedBox",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "matrixStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "res",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "u",
          "type": "int",
          "annotations": []
        },
        {
          "name": "v",
          "type": "int",
          "annotations": []
        },
        {
          "name": "width",
          "type": "int",
          "annotations": []
        },
        {
          "name": "height",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderSize",
          "type": "int",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "Draws a textured box of any size (smallest size is borderSize * 2 square) based on a fixed size textured box with continuous borders and filler. The provided ResourceLocation object will be bound using Minecraft.getMinecraft().getTextureManager().bindTexture(resourceLocation).",
      "deprecated": false
    },
    {
      "name": "drawContinuousTexturedBox",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "matrixStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "res",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "u",
          "type": "int",
          "annotations": []
        },
        {
          "name": "v",
          "type": "int",
          "annotations": []
        },
        {
          "name": "width",
          "type": "int",
          "annotations": []
        },
        {
          "name": "height",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "topBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "bottomBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "leftBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rightBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "Draws a textured box of any size (smallest size is borderSize * 2 square) based on a fixed size textured box with continuous borders and filler. The provided ResourceLocation object will be bound using Minecraft.getMinecraft().getTextureManager().bindTexture(resourceLocation).",
      "deprecated": false
    },
    {
      "name": "drawContinuousTexturedBox",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "matrixStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "u",
          "type": "int",
          "annotations": []
        },
        {
          "name": "v",
          "type": "int",
          "annotations": []
        },
        {
          "name": "width",
          "type": "int",
          "annotations": []
        },
        {
          "name": "height",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "textureHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "topBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "bottomBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "leftBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rightBorder",
          "type": "int",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "Draws a textured box of any size (smallest size is borderSize * 2 square) based on a fixed size textured box with continuous borders and filler. It is assumed that the desired texture ResourceLocation object has been bound using Minecraft.getMinecraft().getTextureManager().bindTexture(resourceLocation).",
      "deprecated": false
    },
    {
      "name": "drawTexturedModalRect",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "matrixStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "u",
          "type": "int",
          "annotations": []
        },
        {
          "name": "v",
          "type": "int",
          "annotations": []
        },
        {
          "name": "width",
          "type": "int",
          "annotations": []
        },
        {
          "name": "height",
          "type": "int",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "float",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "preItemToolTip",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": [
            "Nonnull"
          ]
        }
      ],
      "description": "Must be called from GuiScreen.renderToolTip before GuiScreen.drawHoveringText is called.",
      "deprecated": false
    },
    {
      "name": "postItemToolTip",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Must be called from GuiScreen.renderToolTip after GuiScreen.drawHoveringText is called.",
      "deprecated": false
    },
    {
      "name": "drawHoveringText",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "mStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "textLines",
          "type": "List <? extends FormattedText >",
          "annotations": []
        },
        {
          "name": "mouseX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "mouseY",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "maxTextWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "font",
          "type": "Font",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "drawHoveringText",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "mStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "textLines",
          "type": "List <? extends FormattedText >",
          "annotations": []
        },
        {
          "name": "mouseX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "mouseY",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "maxTextWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "backgroundColor",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderColorStart",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderColorEnd",
          "type": "int",
          "annotations": []
        },
        {
          "name": "font",
          "type": "Font",
          "annotations": []
        }
      ],
      "description": "Draws a tooltip box on the screen with text in it. Automatically positions the box relative to the mouse to match Mojang's implementation. Automatically wraps text when there is not enough space on the screen to display the text without wrapping. Can have a maximum width set to avoid creating very wide tooltips.",
      "deprecated": false
    },
    {
      "name": "drawHoveringText",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": [
            "Nonnull"
          ]
        },
        {
          "name": "mStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "textLines",
          "type": "List <? extends FormattedText >",
          "annotations": []
        },
        {
          "name": "mouseX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "mouseY",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "maxTextWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "font",
          "type": "Font",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "drawHoveringText",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": [
            "Nonnull"
          ]
        },
        {
          "name": "pStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "textLines",
          "type": "List <? extends FormattedText >",
          "annotations": []
        },
        {
          "name": "mouseX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "mouseY",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "screenHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "maxTextWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "backgroundColor",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderColorStart",
          "type": "int",
          "annotations": []
        },
        {
          "name": "borderColorEnd",
          "type": "int",
          "annotations": []
        },
        {
          "name": "font",
          "type": "Font",
          "annotations": []
        }
      ],
      "description": "Use this version if calling from somewhere where ItemStack context is available.",
      "deprecated": false
    },
    {
      "name": "drawGradientRect",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "mat",
          "type": "Matrix4f",
          "annotations": []
        },
        {
          "name": "zLevel",
          "type": "int",
          "annotations": []
        },
        {
          "name": "left",
          "type": "int",
          "annotations": []
        },
        {
          "name": "top",
          "type": "int",
          "annotations": []
        },
        {
          "name": "right",
          "type": "int",
          "annotations": []
        },
        {
          "name": "bottom",
          "type": "int",
          "annotations": []
        },
        {
          "name": "startColor",
          "type": "int",
          "annotations": []
        },
        {
          "name": "endColor",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "drawInscribedRect",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "mStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "boundsWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "boundsHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rectWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rectHeight",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "drawInscribedRect",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "mStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "x",
          "type": "int",
          "annotations": []
        },
        {
          "name": "y",
          "type": "int",
          "annotations": []
        },
        {
          "name": "boundsWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "boundsHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rectWidth",
          "type": "int",
          "annotations": []
        },
        {
          "name": "rectHeight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "centerX",
          "type": "boolean",
          "annotations": []
        },
        {
          "name": "centerY",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.17.1/net/minecraftforge/fmlclient/gui/GuiUtils.html"
}