{
  "type": "class",
  "name": "TerminalConsoleAppender",
  "qualified_name": "TerminalConsoleAppender",
  "package": "",
  "modifiers": [],
  "annotations": [],
  "description": "An Appender that uses the JLine 3.x Terminal to print messages to the console. The JLine Terminal extends the regular console output with support for Ansi escape codes on Windows. Additionally, it's LineReader interface can be used to implement enhanced console input, with an persistent input line, as well as command history and command completion. The TerminalConsole appender replaces the default Console appender in your log4j configuration. By default, log4j will automatically close the standard output when the original Console appender is removed. Consequently, it is necessary to keep an unused Console appender. Example usage: <TerminalConsole> <PatternLayout pattern=\"[%d{HH:mm:ss} %level]: %msg%n\"/> </TerminalConsole> <Console name=\"SysOut\" target=\"SYSTEM_OUT\"/> To use the enhanced console input it is necessary to set the LineReader using setReader(LineReader) . The appender will then automatically redraw the current prompt. When creating the LineReader it's important to use the Terminal returned by getTerminal() . Additionally, the reader should be removed from the appender as soon as it's no longer accepting input (for example when the user interrupted input using CTRL + C. By default, the JLine Terminal is enabled when the application is started with an attached terminal session. Usually, this is only the case if the application is started from the command line, not if it gets started by another application. In some cases, it might be possible to support a subset of the features in these unsupported environments (e.g. only ANSI color codes). In these cases, the system properties may be used to override the default behaviour: JLINE_OVERRIDE_PROPERTY - To enable the extended JLine input. By default this will also enable the ANSI escape codes. ANSI_OVERRIDE_PROPERTY - To enable the output of ANSI escape codes. May be used to force the use of ANSI escape codes if JLine is disabled or to disable them if it is enabled.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "PLUGIN_NAME",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "PROPERTY_PREFIX",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "JLINE_OVERRIDE_PROPERTY",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "ANSI_OVERRIDE_PROPERTY",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "ANSI_OVERRIDE",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "stdout",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "initialized",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "terminal",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    },
    {
      "name": "reader",
      "modifiers": [],
      "type": "",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "TerminalConsoleAppender",
      "modifiers": [],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getTerminal",
      "modifiers": [],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getReader",
      "modifiers": [],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setReader",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isAnsiSupported",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "initializeTerminal",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getOptionalBooleanProperty",
      "modifiers": [],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "append",
      "modifiers": [
        "public"
      ],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "close",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "createAppender",
      "modifiers": [],
      "return_type": "",
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.12.2/net/minecraftforge/server/terminalconsole/TerminalConsoleAppender.html"
}