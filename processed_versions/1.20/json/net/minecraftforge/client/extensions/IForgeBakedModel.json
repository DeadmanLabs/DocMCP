{
  "type": "interface",
  "name": "IForgeBakedModel",
  "qualified_name": "net.minecraftforge.client.extensions.IForgeBakedModel",
  "package": "net.minecraftforge.client.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Extension interface for IForgeBakedModel .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "self",
      "modifiers": [
        "private"
      ],
      "return_type": "BakedModel",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getQuads",
      "modifiers": [
        "default"
      ],
      "return_type": "@NotNull List < BakedQuad >",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "side",
          "type": "Direction",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "rand",
          "type": "RandomSource",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "data",
          "type": "ModelData",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "renderType",
          "type": "RenderType",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "A null RenderType is used for the breaking overlay as well as non-standard rendering, so models should return all their quads.",
      "deprecated": false
    },
    {
      "name": "useAmbientOcclusion",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "useAmbientOcclusion",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "renderType",
          "type": "RenderType",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "applyTransform",
      "modifiers": [
        "default"
      ],
      "return_type": "BakedModel",
      "parameters": [
        {
          "name": "transformType",
          "type": "ItemDisplayContext",
          "annotations": []
        },
        {
          "name": "poseStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "applyLeftHandTransform",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Applies a transform for the given ItemTransforms.TransformType and applyLeftHandTransform , and returns the model to be rendered.",
      "deprecated": false
    },
    {
      "name": "getModelData",
      "modifiers": [
        "default"
      ],
      "return_type": "@NotNull ModelData",
      "parameters": [
        {
          "name": "level",
          "type": "BlockAndTintGetter",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "state",
          "type": "BlockState",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "modelData",
          "type": "ModelData",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getParticleIcon",
      "modifiers": [
        "default"
      ],
      "return_type": "TextureAtlasSprite",
      "parameters": [
        {
          "name": "data",
          "type": "ModelData",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRenderTypes",
      "modifiers": [
        "default"
      ],
      "return_type": "ChunkRenderTypeSet",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "rand",
          "type": "RandomSource",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "data",
          "type": "ModelData",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        }
      ],
      "description": "Gets the set of render types to use when drawing this block in the level. Supported types are those returned by RenderType.chunkBufferLayers() . By default, defers query to ItemBlockRenderTypes .",
      "deprecated": false
    },
    {
      "name": "getRenderTypes",
      "modifiers": [
        "default"
      ],
      "return_type": "List < RenderType >",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "fabulous",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Gets an ordered list of render types to use when drawing this item. All render types using the DefaultVertexFormat.NEW_ENTITY format are supported. This method will only be called on the models returned by getRenderPasses(ItemStack, boolean) . By default, defers query to ItemBlockRenderTypes .",
      "deprecated": false
    },
    {
      "name": "getRenderPasses",
      "modifiers": [
        "default"
      ],
      "return_type": "List < BakedModel >",
      "parameters": [
        {
          "name": "itemStack",
          "type": "ItemStack",
          "annotations": []
        },
        {
          "name": "fabulous",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Gets an ordered list of baked models used to render this model as an item. Each of those models' render types will be queried via getRenderTypes(ItemStack, boolean) . By default, returns the model itself.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.20/net/minecraftforge/client/extensions/IForgeBakedModel.html"
}