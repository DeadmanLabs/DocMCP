{
  "type": "interface",
  "name": ">",
  "qualified_name": "net.minecraftforge.fml.>",
  "package": "net.minecraftforge.fml",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "An extension point for a mod container. An extension point can be registered for a mod container using ModContainer.registerExtensionPoint(Class, Supplier) and retrieved (if present) using ModContainer.getCustomExtension(Class) . An extension point allows a mod to supply an arbitrary value as a record class to another mod or framework through their mod container class, avoiding the use of InterModComms or other external frameworks to pass around these values. The usual way to declare an extension point is to implement this interface on a record class, with the type parameter being a reference to the class itself. For example, record MyExtension(...) extends IExtensionPoint<MyExtension> would declare an extension point which supplies a MyExtension object. However, there is no hard requirement that an extension point's type parameter must be in reference to itself; the type parameter may reference another record class instead.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.19.3/net/minecraftforge/fml/IExtensionPoint.html"
}