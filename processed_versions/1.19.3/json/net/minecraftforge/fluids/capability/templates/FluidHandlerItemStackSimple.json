{
  "type": "class",
  "name": "FluidHandlerItemStackSimple",
  "qualified_name": "net.minecraftforge.fluids.capability.templates.FluidHandlerItemStackSimple",
  "package": "net.minecraftforge.fluids.capability.templates",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "FluidHandlerItemStackSimple is a template capability provider for ItemStacks. Data is stored directly in the vanilla NBT, in the same way as the old ItemFluidContainer. This implementation only allows item containers to be fully filled or emptied, similar to vanilla buckets.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "FLUID_NBT_KEY",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "holder",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "LazyOptional < IFluidHandlerItem >",
      "description": "",
      "deprecated": false
    },
    {
      "name": "container",
      "modifiers": [
        "protected"
      ],
      "type": "@NotNull ItemStack",
      "description": "",
      "deprecated": false
    },
    {
      "name": "capacity",
      "modifiers": [
        "protected"
      ],
      "type": "int",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "FluidHandlerItemStackSimple",
      "modifiers": [
        "public"
      ],
      "parameters": [
        {
          "name": "container",
          "type": "ItemStack",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "capacity",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getContainer",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull ItemStack",
      "parameters": [],
      "description": "Description copied from interface: IFluidHandlerItem",
      "deprecated": false
    },
    {
      "name": "getFluid",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull FluidStack",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setFluid",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getTanks",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "getFluidInTank",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull FluidStack",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "getTankCapacity",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "isFluidValid",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "tank",
          "type": "int",
          "annotations": []
        },
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "fill",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [
        {
          "name": "resource",
          "type": "FluidStack",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "action",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "drain",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull FluidStack",
      "parameters": [
        {
          "name": "resource",
          "type": "FluidStack",
          "annotations": []
        },
        {
          "name": "action",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "drain",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull FluidStack",
      "parameters": [
        {
          "name": "maxDrain",
          "type": "int",
          "annotations": []
        },
        {
          "name": "action",
          "type": "IFluidHandler.FluidAction",
          "annotations": []
        }
      ],
      "description": "Description copied from interface: IFluidHandler",
      "deprecated": false
    },
    {
      "name": "canFillFluidType",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "canDrainFluidType",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "fluid",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "setContainerToEmpty",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Override this method for special handling. Can be used to swap out the container's item for a different one with \"container.setItem\". Can be used to destroy the container with \"container.stackSize--\"",
      "deprecated": false
    },
    {
      "name": "getCapability",
      "modifiers": [
        "public"
      ],
      "return_type": "@NotNull LazyOptional <T>",
      "parameters": [
        {
          "name": "capability",
          "type": "Capability <T>",
          "annotations": [
            "NotNull",
            "NotNull"
          ]
        },
        {
          "name": "facing",
          "type": "Direction",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        }
      ],
      "description": "Description copied from interface: ICapabilityProvider",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.19.3/net/minecraftforge/fluids/capability/templates/FluidHandlerItemStackSimple.html"
}