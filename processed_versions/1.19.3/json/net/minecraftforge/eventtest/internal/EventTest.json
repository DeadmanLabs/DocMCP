{
  "type": "class",
  "name": "EventTest",
  "qualified_name": "net.minecraftforge.eventtest.internal.EventTest",
  "package": "net.minecraftforge.eventtest.internal",
  "modifiers": [
    "public",
    "abstract",
    "class"
  ],
  "annotations": [],
  "description": "The basis of the Event regression testing framework. Allows each bootstrap event to be queried in turn to see whether the event passed. For gameplay events, a callback is set for when the respective event is fired. Test cases should be in a subclass of this, annotated with TestHolder. If the test is for an event that fires in Bootstrap, set the field in constructor. Register the event handler in the registerEvents method, which will be fired automatically. Use the pass / fail / error methods in this class to tell the Framework what the result of the test is.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "testResult",
      "modifiers": [
        "protected"
      ],
      "type": "EventTest.Result",
      "description": "",
      "deprecated": false
    },
    {
      "name": "errorDetail",
      "modifiers": [
        "protected"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "bootstrap",
      "modifiers": [
        "protected"
      ],
      "type": "boolean",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "EventTest",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getTestResult",
      "modifiers": [
        "public"
      ],
      "return_type": "String",
      "parameters": [],
      "description": "A summarised view of the test result. For passes: \"PASS\" For failures: \"FAIL - ($errorDetail)\"",
      "deprecated": false
    },
    {
      "name": "getEnhancedDetail",
      "modifiers": [
        "protected"
      ],
      "return_type": "String",
      "parameters": [],
      "description": "Provide extra detail about the error. Pass-through of errorDetail is default, but some events require something more robust.",
      "deprecated": false
    },
    {
      "name": "isBootstrap",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "registerEvents",
      "modifiers": [
        "public",
        "abstract"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Register event handlers for this event. Trade-off between \"magic annotations\" and verbosity should be evaluated.",
      "deprecated": false
    },
    {
      "name": "fail",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "reason",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "Helper method - combines setting failure state with detail message.",
      "deprecated": false
    },
    {
      "name": "pass",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Helper method - sets the test pass flag.",
      "deprecated": false
    },
    {
      "name": "error",
      "modifiers": [
        "protected"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "reason",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "Helper method - combines setting error state with detail message.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.19.3/net/minecraftforge/eventtest/internal/EventTest.html"
}