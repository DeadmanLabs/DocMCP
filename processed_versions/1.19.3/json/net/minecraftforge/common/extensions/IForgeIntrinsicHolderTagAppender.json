{
  "type": "interface",
  "name": "IForgeIntrinsicHolderTagAppender<T>",
  "qualified_name": "net.minecraftforge.common.extensions.IForgeIntrinsicHolderTagAppender<T>",
  "package": "net.minecraftforge.common.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "self",
      "modifiers": [
        "private"
      ],
      "return_type": "IntrinsicHolderTagsProvider.IntrinsicTagAppender < T >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKey",
      "modifiers": [],
      "return_type": "ResourceKey < T >",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "remove",
      "modifiers": [
        "default"
      ],
      "return_type": "TagsProvider.TagAppender < T >",
      "parameters": [
        {
          "name": "entry",
          "type": "T",
          "annotations": []
        }
      ],
      "description": "Adds a registry entry to the tag json's remove list. Callable during datageneration.",
      "deprecated": false
    },
    {
      "name": "remove",
      "modifiers": [
        "default"
      ],
      "return_type": "TagsProvider.TagAppender < T >",
      "parameters": [
        {
          "name": "first",
          "type": "T",
          "annotations": []
        },
        {
          "name": "entries",
          "type": "T ...",
          "annotations": []
        }
      ],
      "description": "Adds multiple registry entries to the tag json's remove list. Callable during datageneration.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.19.3/net/minecraftforge/common/extensions/IForgeIntrinsicHolderTagAppender.html"
}