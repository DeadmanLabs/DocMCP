{
  "type": "interface",
  "name": "<V>>",
  "qualified_name": "net.minecraftforge.registries.<V>>",
  "package": "net.minecraftforge.registries",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Main interface for the registry system. Use this to query the registry system.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getRegistryName",
      "modifiers": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getRegistrySuperType",
      "modifiers": [],
      "return_type": "Class < V >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "register",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "registerAll",
      "modifiers": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "values",
          "type": "V ...",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "containsKey",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "containsValue",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isEmpty",
      "modifiers": [],
      "return_type": "boolean",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getValue",
      "modifiers": [],
      "return_type": "V",
      "parameters": [
        {
          "name": "key",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKey",
      "modifiers": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "value",
          "type": "V",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getDefaultKey",
      "modifiers": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getKeys",
      "modifiers": [],
      "return_type": "Set < ResourceLocation >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getValues",
      "modifiers": [],
      "return_type": "Collection < V >",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getEntries",
      "modifiers": [],
      "return_type": "Set < Map.Entry < RegistryKey < V >, V >>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getSlaveMap",
      "modifiers": [],
      "return_type": "T",
      "parameters": [
        {
          "name": "slaveMapName",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "type",
          "type": "Class <T>",
          "annotations": []
        }
      ],
      "description": "Retrieve the slave map of type T from the registry. Slave maps are maps which are dependent on registry content in some way.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.16.5/net/minecraftforge/registries/IForgeRegistry.html"
}