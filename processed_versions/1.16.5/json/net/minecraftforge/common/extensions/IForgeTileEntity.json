{
  "type": "interface",
  "name": "IForgeTileEntity",
  "qualified_name": "net.minecraftforge.common.extensions.IForgeTileEntity",
  "package": "net.minecraftforge.common.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "INFINITE_EXTENT_AABB",
      "modifiers": [
        "static",
        "final"
      ],
      "type": "AxisAlignedBB",
      "description": "Sometimes default render bounding box: infinite in scope. Used to control rendering on TileEntitySpecialRenderer .",
      "deprecated": false
    }
  ],
  "constructors": [],
  "methods": [
    {
      "name": "getTileEntity",
      "modifiers": [
        "default"
      ],
      "return_type": "TileEntity",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "deserializeNBT",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "nbt",
          "type": "CompoundNBT",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "deserializeNBT",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "nbt",
          "type": "CompoundNBT",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "serializeNBT",
      "modifiers": [
        "default"
      ],
      "return_type": "CompoundNBT",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onDataPacket",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "net",
          "type": "NetworkManager",
          "annotations": []
        },
        {
          "name": "pkt",
          "type": "SUpdateTileEntityPacket",
          "annotations": []
        }
      ],
      "description": "Called when you receive a TileEntityData packet for the location this TileEntity is currently in. On the client, the NetworkManager will always be the remote server. On the server, it will be whomever is responsible for sending the packet.",
      "deprecated": false
    },
    {
      "name": "handleUpdateTag",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "tag",
          "type": "CompoundNBT",
          "annotations": []
        }
      ],
      "description": "Called when the chunk's TE update tag, gotten from #getUpdateTag() , is received on the client. Used to handle this tag in a special way. By default this simply calls #readFromNBT(NBTTagCompound) .",
      "deprecated": false
    },
    {
      "name": "getTileData",
      "modifiers": [],
      "return_type": "CompoundNBT",
      "parameters": [],
      "description": "Gets a NBTTagCompound that can be used to store custom data for this tile entity. It will be written, and read from disc, so it persists over world saves.",
      "deprecated": false
    },
    {
      "name": "onChunkUnloaded",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "onLoad",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Called when this is first added to the world (by World#addTileEntity(TileEntity) ). Override instead of adding if (firstTick) stuff in update.",
      "deprecated": false
    },
    {
      "name": "getRenderBoundingBox",
      "modifiers": [
        "default"
      ],
      "return_type": "AxisAlignedBB",
      "parameters": [],
      "description": "Return an AxisAlignedBB that controls the visible scope of a TileEntitySpecialRenderer associated with this TileEntity Defaults to the collision bounding box Block#getCollisionBoundingBoxFromPool(World, int, int, int) associated with the block at this location.",
      "deprecated": false
    },
    {
      "name": "requestModelDataUpdate",
      "modifiers": [
        "default"
      ],
      "return_type": "void",
      "parameters": [],
      "description": "Requests a refresh for the model data of your TE Call this every time your getModelData() changes",
      "deprecated": false
    },
    {
      "name": "getModelData",
      "modifiers": [
        "default"
      ],
      "return_type": "IModelData",
      "parameters": [],
      "description": "Allows you to return additional model data. This data can be used to provide additional functionality in your IBakedModel You need to schedule a refresh of you model data via requestModelDataUpdate() if the result of this function changes. Note that this method may be called on a chunk render thread instead of the main client thread",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.16.5/net/minecraftforge/common/extensions/IForgeTileEntity.html"
}