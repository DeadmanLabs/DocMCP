{
  "type": "interface",
  "name": ">",
  "qualified_name": "net.minecraftforge.network.payload.handler.>",
  "package": "net.minecraftforge.network.payload.handler",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "add",
      "modifiers": [],
      "return_type": "PayloadHandlerFlow < BUF , BASE >",
      "parameters": [
        {
          "name": "type",
          "type": "CustomPacketPayload.Type <MSG>",
          "annotations": []
        },
        {
          "name": "codec",
          "type": "StreamCodec < BUF , MSG>",
          "annotations": []
        }
      ],
      "description": "Adds a packet to this channel that has it's protocol validated whenever sent or received. The handler is called on the network thread, and so should not interact with most game state by default. CustomPayloadEvent.Context.enqueueWork(Runnable) can be used to handle the message on the main server or client thread. Alternatively one can use invalid reference #addMain(Class, StreamCodec) to run the handler on the main thread.",
      "deprecated": false
    },
    {
      "name": "addMain",
      "modifiers": [],
      "return_type": "PayloadHandlerFlow < BUF , BASE >",
      "parameters": [
        {
          "name": "type",
          "type": "CustomPacketPayload.Type <MSG>",
          "annotations": []
        },
        {
          "name": "codec",
          "type": "StreamCodec < BUF , MSG>",
          "annotations": []
        }
      ],
      "description": "Adds a packet to this channel that has it's protocol validated whenever sent or received. Unlike add(Type,StreamCodec) , the consumer is called on the main thread, and so can interact with most game state by default.",
      "deprecated": false
    },
    {
      "name": "add",
      "modifiers": [],
      "return_type": "PayloadHandlerFlow < BUF , BASE >",
      "parameters": [
        {
          "name": "type",
          "type": "CustomPacketPayload.Type <MSG>",
          "annotations": []
        },
        {
          "name": "codec",
          "type": "StreamCodec < BUF , MSG>",
          "annotations": []
        },
        {
          "name": "handler",
          "type": "BiConsumer <MSG, CustomPayloadEvent.Context >",
          "annotations": []
        }
      ],
      "description": "Adds a packet to this channel that has it's protocol validated whenever sent or received. The handler is called on the network thread, and so should not interact with most game state by default. CustomPayloadEvent.Context.enqueueWork(Runnable) can be used to handle the message on the main server or client thread.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21/net/minecraftforge/network/payload/handler/PayloadHandlerFlow.html"
}