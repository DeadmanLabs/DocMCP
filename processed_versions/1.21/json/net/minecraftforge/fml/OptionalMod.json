{
  "type": "class",
  "name": "OptionalMod<T>",
  "qualified_name": "net.minecraftforge.fml.OptionalMod<T>",
  "package": "net.minecraftforge.fml",
  "modifiers": [
    "public",
    "final",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "modId",
      "modifiers": [
        "private",
        "final"
      ],
      "type": "String",
      "description": "",
      "deprecated": false
    },
    {
      "name": "value",
      "modifiers": [
        "private"
      ],
      "type": "T",
      "description": "",
      "deprecated": false
    },
    {
      "name": "searched",
      "modifiers": [
        "private"
      ],
      "type": "boolean",
      "description": "",
      "deprecated": false
    },
    {
      "name": "EMPTY",
      "modifiers": [
        "private",
        "static"
      ],
      "type": "OptionalMod <?>",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "OptionalMod",
      "modifiers": [
        "private"
      ],
      "parameters": [
        {
          "name": "searched",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "OptionalMod",
      "modifiers": [
        "private"
      ],
      "parameters": [
        {
          "name": "modId",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "of",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "OptionalMod <M>",
      "parameters": [
        {
          "name": "modId",
          "type": "String",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "empty",
      "modifiers": [
        "private",
        "static"
      ],
      "return_type": "OptionalMod <T>",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "getValue",
      "modifiers": [
        "private"
      ],
      "return_type": "T",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "get",
      "modifiers": [
        "public"
      ],
      "return_type": "T",
      "parameters": [],
      "description": "If a mod is present in this OptionalMod , returns the value, otherwise throws NoSuchElementException .",
      "deprecated": false
    },
    {
      "name": "getModId",
      "modifiers": [
        "public"
      ],
      "return_type": "String",
      "parameters": [],
      "description": "",
      "deprecated": false
    },
    {
      "name": "isPresent",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [],
      "description": "Return true if there is a mod object present, otherwise false .",
      "deprecated": false
    },
    {
      "name": "ifPresent",
      "modifiers": [
        "public"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "consumer",
          "type": "Consumer <? super T >",
          "annotations": []
        }
      ],
      "description": "If a mod object is present, invoke the specified consumer with the object, otherwise do nothing.",
      "deprecated": false
    },
    {
      "name": "filter",
      "modifiers": [
        "public"
      ],
      "return_type": "OptionalMod < T >",
      "parameters": [
        {
          "name": "predicate",
          "type": "Predicate <? super T >",
          "annotations": []
        }
      ],
      "description": "If a mod object is present, and the mod object matches the given predicate, return an OptionalMod describing the value, otherwise return an empty OptionalMod .",
      "deprecated": false
    },
    {
      "name": "map",
      "modifiers": [
        "public"
      ],
      "return_type": "Optional <U>",
      "parameters": [
        {
          "name": "mapper",
          "type": "Function <? super T , ? extends U>",
          "annotations": []
        }
      ],
      "description": "If a mod object is present, apply the provided mapping function to it, and if the result is non-null, return an Optional describing the result. Otherwise return an empty Optional .",
      "deprecated": false
    },
    {
      "name": "flatMap",
      "modifiers": [
        "public"
      ],
      "return_type": "Optional <U>",
      "parameters": [
        {
          "name": "mapper",
          "type": "Function <? super T , Optional <U>>",
          "annotations": []
        }
      ],
      "description": "If a value is present, apply the provided Optional -bearing mapping function to it, return that result, otherwise return an empty Optional . This method is similar to map(Function) , but the provided mapper is one whose result is already an Optional , and if invoked, flatMap does not wrap it with an additional Optional .",
      "deprecated": false
    },
    {
      "name": "orElse",
      "modifiers": [
        "public"
      ],
      "return_type": "T",
      "parameters": [
        {
          "name": "other",
          "type": "T",
          "annotations": []
        }
      ],
      "description": "Return the mod object if present, otherwise return other .",
      "deprecated": false
    },
    {
      "name": "orElseGet",
      "modifiers": [
        "public"
      ],
      "return_type": "T",
      "parameters": [
        {
          "name": "other",
          "type": "Supplier <? extends T >",
          "annotations": []
        }
      ],
      "description": "Return the mod object if present, otherwise invoke other and return the result of that invocation.",
      "deprecated": false
    },
    {
      "name": "orElseThrow",
      "modifiers": [
        "public"
      ],
      "return_type": "T",
      "parameters": [
        {
          "name": "exceptionSupplier",
          "type": "Supplier <? extends X>",
          "annotations": []
        }
      ],
      "description": "Return the contained mod object, if present, otherwise throw an exception to be created by the provided supplier.",
      "deprecated": false
    },
    {
      "name": "equals",
      "modifiers": [
        "public"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "obj",
          "type": "Object",
          "annotations": []
        }
      ],
      "description": "",
      "deprecated": false
    },
    {
      "name": "hashCode",
      "modifiers": [
        "public"
      ],
      "return_type": "int",
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21/net/minecraftforge/fml/OptionalMod.html"
}