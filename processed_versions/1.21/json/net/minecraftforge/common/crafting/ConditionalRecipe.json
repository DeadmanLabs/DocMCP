{
  "type": "class",
  "name": "ConditionalRecipe",
  "qualified_name": "net.minecraftforge.common.crafting.ConditionalRecipe",
  "package": "net.minecraftforge.common.crafting",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "So, A 'ConditionalRecipe' differs from all normal recipes in the fact that in addition to the conditions disabling the entire recipe, it has sub-recipes that themselves have conditions. And when being deserialized it returns the first entry that passes the conditional check. This basically means that you can have muultiple variants all use the same recipe name, and only one will ever be loaded. This also means that you can wrap ALL recipes in a Conditional even those that don't explicitly have support for them in their data gen.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "CODEC",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "type": "com.mojang.serialization.MapCodec< Recipe <?>>",
      "description": "",
      "deprecated": false
    },
    {
      "name": "SERIALZIER",
      "modifiers": [
        "public",
        "static",
        "final"
      ],
      "type": "RecipeSerializer < Recipe <?>>",
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ConditionalRecipe",
      "modifiers": [
        "public"
      ],
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "builder",
      "modifiers": [
        "public",
        "static"
      ],
      "return_type": "ConditionalRecipe.Builder",
      "parameters": [],
      "description": "",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21/net/minecraftforge/common/crafting/ConditionalRecipe.html"
}