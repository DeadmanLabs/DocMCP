{
  "type": "interface",
  "name": "IForgeFluid",
  "qualified_name": "net.minecraftforge.common.extensions.IForgeFluid",
  "package": "net.minecraftforge.common.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getExplosionResistance",
      "modifiers": [
        "default"
      ],
      "return_type": "float",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "explosion",
          "type": "Explosion",
          "annotations": []
        }
      ],
      "description": "Returns the explosion resistance of the fluid.",
      "deprecated": false
    },
    {
      "name": "getFluidType",
      "modifiers": [],
      "return_type": "FluidType",
      "parameters": [],
      "description": "Returns the type of this fluid. Important: This MUST be overridden on your fluid, otherwise an error will be thrown.",
      "deprecated": false
    },
    {
      "name": "move",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "entity",
          "type": "LivingEntity",
          "annotations": []
        },
        {
          "name": "movementVector",
          "type": "Vec3",
          "annotations": []
        },
        {
          "name": "gravity",
          "type": "double",
          "annotations": []
        }
      ],
      "description": "Performs how an entity moves when within the fluid. If using custom movement logic, the method should return true . Otherwise, the movement logic will default to water.",
      "deprecated": false
    },
    {
      "name": "canConvertToSource",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "Returns whether the fluid can create a source.",
      "deprecated": false
    },
    {
      "name": "supportsBoating",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "boat",
          "type": "Boat",
          "annotations": []
        }
      ],
      "description": "Returns whether the boat can be used on the fluid.",
      "deprecated": false
    },
    {
      "name": "shouldUpdateWhileBoating",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "boat",
          "type": "Boat",
          "annotations": []
        },
        {
          "name": "rider",
          "type": "Entity",
          "annotations": []
        }
      ],
      "description": "When false , the fluid will no longer update its height value while within a boat while it is not within a fluid ( Boat.isUnderWater() .",
      "deprecated": false
    },
    {
      "name": "getBlockPathType",
      "modifiers": [
        "default"
      ],
      "return_type": "@Nullable PathType",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "mob",
          "type": "Mob",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "canFluidLog",
          "type": "boolean",
          "annotations": []
        }
      ],
      "description": "Gets the path type of this fluid when an entity is pathfinding. When null , uses vanilla behavior.",
      "deprecated": false
    },
    {
      "name": "getAdjacentBlockPathType",
      "modifiers": [
        "default"
      ],
      "return_type": "@Nullable PathType",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "mob",
          "type": "Mob",
          "annotations": [
            "Nullable",
            "Nullable"
          ]
        },
        {
          "name": "originalType",
          "type": "PathType",
          "annotations": []
        }
      ],
      "description": "Gets the path type of the adjacent fluid to a pathfinding entity. Path types with a negative malus are not traversable for the entity. Pathfinding entities will favor paths consisting of a lower malus. When null , uses vanilla behavior.",
      "deprecated": false
    },
    {
      "name": "canHydrate",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "source",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "sourcePos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "Returns whether the block can be hydrated by a fluid. Hydration is an arbitrary word which depends on the block. A farmland has moisture A sponge can soak up the liquid A coral can live",
      "deprecated": false
    },
    {
      "name": "canExtinguish",
      "modifiers": [
        "default"
      ],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "description": "Returns whether the block can be extinguished by this fluid.",
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "Frameworks/1.21/net/minecraftforge/common/extensions/IForgeFluid.html"
}