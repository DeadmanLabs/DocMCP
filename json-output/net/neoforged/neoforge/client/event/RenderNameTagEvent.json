{
  "type": "class",
  "name": "RenderNameTagEvent",
  "qualified_name": "net.neoforged.neoforge.client.event.RenderNameTagEvent",
  "package": "net.neoforged.neoforge.client.event",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This event is fired before an entity renderer renders the nameplate of an entity. It allows reacting to the render and controlling if the name plate will be rendered, as well as changing the rendered name. This event is only fired on the logical client.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object",
      "net.neoforged.neoforge.event.entity.EntityEvent"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "originalContent",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "Component",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "entityRenderer",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "EntityRenderer <?>",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "poseStack",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "PoseStack",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "multiBufferSource",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "MultiBufferSource",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "packedLight",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "int",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "partialTick",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "float",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "content",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "type": "Component",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "canRender",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "type": "TriState",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "RenderNameTagEvent",
      "modifiers": [
        "public"
      ],
      "annotations": [
        "@Internal"
      ],
      "parameters": [
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "content",
          "type": "Component",
          "annotations": []
        },
        {
          "name": "entityRenderer",
          "type": "EntityRenderer <?>",
          "annotations": []
        },
        {
          "name": "poseStack",
          "type": "PoseStack",
          "annotations": []
        },
        {
          "name": "multiBufferSource",
          "type": "MultiBufferSource",
          "annotations": []
        },
        {
          "name": "packedLight",
          "type": "int",
          "annotations": []
        },
        {
          "name": "partialTick",
          "type": "float",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "setCanRender",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "canRender",
          "type": "TriState",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Changes if the content of the nameplate will be rendered. TriState.TRUE and TriState.FALSE will allow/deny the render respectively. Using TriState.DEFAULT will cause the name to render if EntityRenderer.shouldShowName(T) returns true.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "canRender",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "TriState",
      "parameters": [],
      "exceptions": [],
      "description": "Returns if the nameplate will render or not.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "setContent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "contents",
          "type": "Component",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Sets the new text on the nameplate.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getContent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Component",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the text on the nameplate that will be rendered.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOriginalContent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Component",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the original text on the nameplate.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getEntityRenderer",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "EntityRenderer <?>",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the entity renderer rendering the nameplate.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getPoseStack",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "PoseStack",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the pose stack used for rendering.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getMultiBufferSource",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "MultiBufferSource",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the source of rendering buffers.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getPackedLight",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the amount of packed (sky and block) light for rendering.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getPartialTick",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "float",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the partial tick.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/client/event/RenderNameTagEvent.html"
}