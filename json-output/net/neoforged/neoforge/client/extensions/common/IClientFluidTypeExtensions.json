{
  "type": "interface",
  "name": "IClientFluidTypeExtensions",
  "qualified_name": "net.neoforged.neoforge.client.extensions.common.IClientFluidTypeExtensions",
  "package": "net.neoforged.neoforge.client.extensions.common",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Client-only extensions to FluidType .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "DEFAULT",
      "modifiers": [
        "static",
        "final"
      ],
      "annotations": [],
      "type": "IClientFluidTypeExtensions",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [],
  "methods": [
    {
      "name": "of",
      "modifiers": [
        "static"
      ],
      "annotations": [],
      "return_type": "IClientFluidTypeExtensions",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "of",
      "modifiers": [
        "static"
      ],
      "annotations": [],
      "return_type": "IClientFluidTypeExtensions",
      "parameters": [
        {
          "name": "fluid",
          "type": "Fluid",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "of",
      "modifiers": [
        "static"
      ],
      "annotations": [],
      "return_type": "IClientFluidTypeExtensions",
      "parameters": [
        {
          "name": "type",
          "type": "FluidType",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getTintColor",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the tint applied to the fluid's textures. The result represents a 32-bit integer where each 8-bits represent the alpha, red, green, and blue channel respectively.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getStillTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a source fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_still will point to assets/minecraft/textures/block/water_still.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getFlowingTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a flowing fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_flow will point to assets/minecraft/textures/block/water_flow.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOverlayTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [
        "@Nullable"
      ],
      "return_type": "@Nullable ResourceLocation",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a fluid directly touching a non-opaque block other than air. If no reference is specified, either #getStillTexture or #getFlowingTexture will be applied instead. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_overlay will point to assets/minecraft/textures/block/water_overlay.png ).",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getRenderOverlayTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [
        "@Nullable"
      ],
      "return_type": "@Nullable ResourceLocation",
      "parameters": [
        {
          "name": "mc",
          "type": "Minecraft",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the location of the texture to apply to the camera when it is within the fluid. If no location is specified, no overlay will be applied. This should return a location to the texture and not a reference (e.g. minecraft:textures/misc/underwater.png will use the texture at assets/minecraft/textures/misc/underwater.png ).",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "renderOverlay",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "mc",
          "type": "Minecraft",
          "annotations": []
        },
        {
          "name": "poseStack",
          "type": "PoseStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Renders #getRenderOverlayTexture onto the camera when within the fluid.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "modifyFogColor",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "org.joml.Vector3f",
      "parameters": [
        {
          "name": "camera",
          "type": "Camera",
          "annotations": []
        },
        {
          "name": "partialTick",
          "type": "float",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ClientLevel",
          "annotations": []
        },
        {
          "name": "renderDistance",
          "type": "int",
          "annotations": []
        },
        {
          "name": "darkenWorldAmount",
          "type": "float",
          "annotations": []
        },
        {
          "name": "fluidFogColor",
          "type": "org.joml.Vector3f",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Modifies the color of the fog when the camera is within the fluid. The result expects a three float vector representing the red, green, and blue channels respectively. Each channel should be between [0,1].",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "modifyFogRender",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "camera",
          "type": "Camera",
          "annotations": []
        },
        {
          "name": "mode",
          "type": "FogRenderer.FogMode",
          "annotations": []
        },
        {
          "name": "renderDistance",
          "type": "float",
          "annotations": []
        },
        {
          "name": "partialTick",
          "type": "float",
          "annotations": []
        },
        {
          "name": "nearDistance",
          "type": "float",
          "annotations": []
        },
        {
          "name": "farDistance",
          "type": "float",
          "annotations": []
        },
        {
          "name": "shape",
          "type": "FogShape",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Modifies how the fog is currently being rendered when the camera is within a fluid.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getStillTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a source fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_still will point to assets/minecraft/textures/block/water_still.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getFlowingTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a flowing fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_flow will point to assets/minecraft/textures/block/water_flow.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOverlayTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a fluid directly touching a non-opaque block other than air. If no reference is specified, either #getStillTexture or #getFlowingTexture will be applied instead. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_overlay will point to assets/minecraft/textures/block/water_overlay.png ).",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getTintColor",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [
        {
          "name": "state",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the tint applied to the fluid's textures. The result represents a 32-bit integer where each 8-bits represent the alpha, red, green, and blue channel respectively.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getTintColor",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the tint applied to the fluid's textures. The result represents a 32-bit integer where each 8-bits represent the alpha, red, green, and blue channel respectively.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getStillTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a source fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_still will point to assets/minecraft/textures/block/water_still.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getFlowingTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a flowing fluid. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_flow will point to assets/minecraft/textures/block/water_flow.png ). Important: This method should only return null for Fluids.EMPTY . All other implementations must define this property.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOverlayTexture",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [
        {
          "name": "stack",
          "type": "FluidStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns the reference of the texture to apply to a fluid directly touching a non-opaque block other than air. If no reference is specified, either #getStillTexture or #getFlowingTexture will be applied instead. This should return a reference to the texture and not the actual texture itself (e.g. minecraft:block/water_overlay will point to assets/minecraft/textures/block/water_overlay.png ).",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "renderFluid",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "fluidState",
          "type": "FluidState",
          "annotations": []
        },
        {
          "name": "getter",
          "type": "BlockAndTintGetter",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "vertexConsumer",
          "type": "VertexConsumer",
          "annotations": []
        },
        {
          "name": "blockState",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Called to allow rendering custom quads for a fluid during chunk meshing. You may replace the fluid rendering entirely, or return false to allow vanilla's fluid rendering to also run. Note: this method will be called once for every fluid block during chunk meshing, so any logic here needs to be performant.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/client/extensions/common/IClientFluidTypeExtensions.html"
}