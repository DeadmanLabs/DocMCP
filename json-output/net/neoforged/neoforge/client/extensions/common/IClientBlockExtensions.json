{
  "type": "interface",
  "name": "IClientBlockExtensions",
  "qualified_name": "net.neoforged.neoforge.client.extensions.common.IClientBlockExtensions",
  "package": "net.neoforged.neoforge.client.extensions.common",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Client-only extensions to Block .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "DEFAULT",
      "modifiers": [
        "static",
        "final"
      ],
      "annotations": [],
      "type": "IClientBlockExtensions",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [],
  "methods": [
    {
      "name": "of",
      "modifiers": [
        "static"
      ],
      "annotations": [],
      "return_type": "IClientBlockExtensions",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "of",
      "modifiers": [
        "static"
      ],
      "annotations": [],
      "return_type": "IClientBlockExtensions",
      "parameters": [
        {
          "name": "block",
          "type": "Block",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "addHitEffects",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "target",
          "type": "HitResult",
          "annotations": []
        },
        {
          "name": "manager",
          "type": "ParticleEngine",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Spawn a digging particle effect in the level, this is a wrapper around EffectRenderer.addBlockHitEffects to allow the block more control over the particles. Useful when you have entirely different texture sheets for different sides/locations in the level.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "addDestroyEffects",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "Level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "manager",
          "type": "ParticleEngine",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Spawn particles for when the block is destroyed. Due to the nature of how this is invoked, the x/y/z locations are not always guaranteed to host your block. So be sure to do proper sanity checks before assuming that the location is this block.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "playBreakSound",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Play breaking sound(s) when the block is destroyed. This allows playing sounds dependent on BE data as it is called before the block and BE are actually removed on the client.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getFogColor",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "org.joml.Vector3d",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "LevelReader",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "entity",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "originalColor",
          "type": "org.joml.Vector3d",
          "annotations": []
        },
        {
          "name": "partialTick",
          "type": "float",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "NOT CURRENTLY IMPLEMENTED Use this to change the fog color used when the entity is \"inside\" a material. Vec3d is used here as \"r/g/b\" 0 - 1 values.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "areBreakingParticlesTinted",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "state",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "level",
          "type": "ClientLevel",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Returns true if the breaking particles created from the BlockState passed should be tinted with biome colors.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/client/extensions/common/IClientBlockExtensions.html"
}