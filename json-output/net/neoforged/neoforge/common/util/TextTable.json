{
  "type": "class",
  "name": "TextTable",
  "qualified_name": "net.neoforged.neoforge.common.util.TextTable",
  "package": "net.neoforged.neoforge.common.util",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "Utility to format data into a textual (markdown-compliant) table.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [
    "TextTable.Alignment",
    "TextTable.Column",
    "TextTable.Row"
  ],
  "fields": [
    {
      "name": "columns",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "List < TextTable.Column >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "rows",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "List < TextTable.Row >",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "TextTable",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "columns",
          "type": "List < TextTable.Column >",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "column",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "TextTable.Column",
      "parameters": [
        {
          "name": "header",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "column",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "TextTable.Column",
      "parameters": [
        {
          "name": "header",
          "type": "String",
          "annotations": []
        },
        {
          "name": "alignment",
          "type": "TextTable.Alignment",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "build",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "String",
      "parameters": [
        {
          "name": "lineEnding",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "append",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "destination",
          "type": "StringBuilder",
          "annotations": []
        },
        {
          "name": "lineEnding",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Appends the data formatted as a table to the given string builder. The padding character used for the column alignments is a single space (' '), the separate between column headers and values is a dash ('-'). Note that you *have* to specify a line ending, '\\n' isn't used by default. The generated table is compliant with the markdown file format.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "printSeparators",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "destination",
          "type": "StringBuilder",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "printRow",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "destination",
          "type": "StringBuilder",
          "annotations": []
        },
        {
          "name": "values",
          "type": "List < String >",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "add",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "values",
          "type": "Object ...",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "clear",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getColumns",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "List < TextTable.Column >",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/util/TextTable.html"
}