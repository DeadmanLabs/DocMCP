{
  "type": "class",
  "name": "NeoForgeExtraCodecs",
  "qualified_name": "net.neoforged.neoforge.common.util.NeoForgeExtraCodecs",
  "package": "net.neoforged.neoforge.common.util",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "Codec -related helper functions that are not in ExtraCodecs , but useful to NeoForge and other mods.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [
    "NeoForgeExtraCodecs.AlternativeCodec",
    "NeoForgeExtraCodecs.AlternativeMapCodec",
    "NeoForgeExtraCodecs.XorMapCodec"
  ],
  "fields": [],
  "constructors": [
    {
      "name": "NeoForgeExtraCodecs",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "aliasedFieldOf",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<T>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "names",
          "type": "String ...",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "optionalFieldAlwaysWrite",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<T>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "name",
          "type": "String",
          "annotations": []
        },
        {
          "name": "defaultValue",
          "type": "T",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Similar to Codec.optionalFieldOf(String, Object) , except that the default value is always written.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "mapWithAlternative",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<T>",
      "parameters": [
        {
          "name": "mapCodec",
          "type": "com.mojang.serialization.MapCodec<T>",
          "annotations": []
        },
        {
          "name": "alternative",
          "type": "com.mojang.serialization.MapCodec<? extends T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "singularOrPluralCodec",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec< Set <T>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "singularName",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "singularOrPluralCodec",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec< Set <T>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "singularName",
          "type": "String",
          "annotations": []
        },
        {
          "name": "pluralName",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "singularOrPluralCodecNotEmpty",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec< Set <T>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "singularName",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "singularOrPluralCodecNotEmpty",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec< Set <T>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "singularName",
          "type": "String",
          "annotations": []
        },
        {
          "name": "pluralName",
          "type": "String",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "setOf",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.Codec< Set <T>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "decodeOnly",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.Codec<A>",
      "parameters": [
        {
          "name": "decoder",
          "type": "com.mojang.serialization.Decoder<A>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Creates a codec from a decoder. The returned codec can only decode, and will throw on any attempt to encode.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "listWithOptionalElements",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.Codec< List <A>>",
      "parameters": [
        {
          "name": "elementCodec",
          "type": "com.mojang.serialization.Codec< Optional <A>>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Creates a codec for a list from a codec of optional elements. The empty optionals are removed from the list when decoding.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "listWithoutEmpty",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.Codec< List <A>>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec< List < Optional <A>>>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Creates a codec for a list of optional elements, that removes empty values when decoding.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "withAlternative",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.Codec<T>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        },
        {
          "name": "alternative",
          "type": "com.mojang.serialization.Codec<T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Codec with two alternatives. The vanilla invalid reference ExtraCodecs#withAlternative(Codec, Codec) will try the first codec and then the second codec for decoding, but only the first for encoding . Unlike vanilla, this alternative codec also tries to encode with the second codec if the first encode fails.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "withAlternative",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<T>",
      "parameters": [
        {
          "name": "codec",
          "type": "com.mojang.serialization.MapCodec<T>",
          "annotations": []
        },
        {
          "name": "alternative",
          "type": "com.mojang.serialization.MapCodec<T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "MapCodec with two alternatives. mapWithAlternative(MapCodec, MapCodec) will try the first codec and then the second codec for decoding, but only the first for encoding . Unlike mapWithAlternative(MapCodec, MapCodec) , this alternative codec also tries to encode with the second codec if the first encode fails.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "dispatchMapOrElse",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<com.mojang.datafixers.util.Either<E, B>>",
      "parameters": [
        {
          "name": "typeCodec",
          "type": "com.mojang.serialization.Codec<A>",
          "annotations": []
        },
        {
          "name": "type",
          "type": "Function <? super E, ? extends A>",
          "annotations": []
        },
        {
          "name": "codec",
          "type": "Function <? super A, ? extends com.mojang.serialization.MapCodec<? extends E>>",
          "annotations": []
        },
        {
          "name": "fallbackCodec",
          "type": "com.mojang.serialization.MapCodec<B>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Map dispatch codec with an alternative. The alternative will only be used if there is no \"type\" key in the serialized object.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "xor",
      "modifiers": [
        "public",
        "static"
      ],
      "annotations": [],
      "return_type": "com.mojang.serialization.MapCodec<com.mojang.datafixers.util.Either<F, S>>",
      "parameters": [
        {
          "name": "first",
          "type": "com.mojang.serialization.MapCodec<F>",
          "annotations": []
        },
        {
          "name": "second",
          "type": "com.mojang.serialization.MapCodec<S>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Codec that matches exactly one out of two map codecs. Same as Codec.xor(com.mojang.serialization.Codec<F>, com.mojang.serialization.Codec<S>) but for MapCodec s.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/util/NeoForgeExtraCodecs.html"
}