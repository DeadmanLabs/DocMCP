{
  "type": "class",
  "name": "ModifiableBiomeInfo",
  "qualified_name": "net.neoforged.neoforge.common.world.ModifiableBiomeInfo",
  "package": "net.neoforged.neoforge.common.world",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "Holds lazy-evaluable modified biome info. Memoizers are not used because it's important to return null without evaluating the biome info if it's accessed outside of a server context.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [
    "ModifiableBiomeInfo.BiomeInfo"
  ],
  "fields": [
    {
      "name": "originalBiomeInfo",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "ModifiableBiomeInfo.BiomeInfo",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "modifiedBiomeInfo",
      "modifiers": [
        "private"
      ],
      "annotations": [
        "@Nullable"
      ],
      "type": "@Nullable ModifiableBiomeInfo.BiomeInfo",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ModifiableBiomeInfo",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "originalBiomeInfo",
          "type": "ModifiableBiomeInfo.BiomeInfo",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "get",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ModifiableBiomeInfo.BiomeInfo",
      "parameters": [],
      "exceptions": [],
      "description": "Returns The modified biome info if modified biome info has been generated, otherwise gets original biome info.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOriginalBiomeInfo",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ModifiableBiomeInfo.BiomeInfo",
      "parameters": [],
      "exceptions": [],
      "description": "Returns The original biome info that the associated biome was created with.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getModifiedBiomeInfo",
      "modifiers": [
        "public"
      ],
      "annotations": [
        "@Nullable"
      ],
      "return_type": "@Nullable ModifiableBiomeInfo.BiomeInfo",
      "parameters": [],
      "exceptions": [],
      "description": "Returns Modified biome info; null if it hasn't been set yet.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "applyBiomeModifiers",
      "modifiers": [
        "public"
      ],
      "annotations": [
        "@Internal"
      ],
      "return_type": "void",
      "parameters": [
        {
          "name": "biome",
          "type": "Holder < Biome >",
          "annotations": []
        },
        {
          "name": "biomeModifiers",
          "type": "List < BiomeModifier >",
          "annotations": []
        }
      ],
      "exceptions": [
        "biomeModifiers - biome modifiers to apply."
      ],
      "description": "Internal forge method; the game will crash if mods invoke this. Creates and caches the modified biome info.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/world/ModifiableBiomeInfo.html"
}