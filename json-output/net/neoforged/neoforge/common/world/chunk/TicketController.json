{
  "type": "record",
  "name": "TicketController",
  "qualified_name": "net.neoforged.neoforge.common.world.chunk.TicketController",
  "package": "net.neoforged.neoforge.common.world.chunk",
  "modifiers": [
    "public",
    "record"
  ],
  "annotations": [
    "@ParametersAreNonnullByDefault"
  ],
  "description": "A class used to manage chunk loading tickets associated with a specific ID. Controllers must be registered via RegisterTicketControllersEvent . A controller that isn't registered will have all of its tickets discarded when the world is loaded, and any attempts at force-loading a chunk through it will result in an IllegalArgumentException .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object",
      "java.lang.Record"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "id",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "ResourceLocation",
      "value": null,
      "description": "The field for the id record component.",
      "deprecated": false
    },
    {
      "name": "callback",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [
        "@Nullable"
      ],
      "type": "@Nullable LoadingValidationCallback",
      "value": null,
      "description": "The field for the callback record component.",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "TicketController",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "id",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "callback",
          "type": "LoadingValidationCallback",
          "annotations": [
            "@Nullable",
            "@Nullable"
          ]
        }
      ],
      "exceptions": [],
      "description": "Creates an instance of a TicketController record class.",
      "deprecated": false
    },
    {
      "name": "TicketController",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "id",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Creates a ticket controller without a validation callback.",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "forceChunk",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "owner",
          "type": "BlockPos",
          "annotations": []
        },
        {
          "name": "chunkX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "chunkZ",
          "type": "int",
          "annotations": []
        },
        {
          "name": "add",
          "type": "boolean",
          "annotations": []
        },
        {
          "name": "ticking",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Forces a chunk to be loaded with the \"owner\" of the ticket being a given block position.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "forceChunk",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "owner",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "chunkX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "chunkZ",
          "type": "int",
          "annotations": []
        },
        {
          "name": "add",
          "type": "boolean",
          "annotations": []
        },
        {
          "name": "ticking",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Forces a chunk to be loaded with the \"owner\" of the ticket being the UUID of the given entity.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "forceChunk",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "owner",
          "type": "UUID",
          "annotations": []
        },
        {
          "name": "chunkX",
          "type": "int",
          "annotations": []
        },
        {
          "name": "chunkZ",
          "type": "int",
          "annotations": []
        },
        {
          "name": "add",
          "type": "boolean",
          "annotations": []
        },
        {
          "name": "ticking",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Forces a chunk to be loaded with the \"owner\" of the ticket being a given UUID.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "toString",
      "modifiers": [
        "public",
        "final"
      ],
      "annotations": [],
      "return_type": "String",
      "parameters": [],
      "exceptions": [],
      "description": "Returns a string representation of this record class. The representation contains the name of the class, followed by the name and value of each of the record components.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "hashCode",
      "modifiers": [
        "public",
        "final"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [],
      "exceptions": [],
      "description": "Returns a hash code value for this object. The value is derived from the hash code of each of the record components.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "equals",
      "modifiers": [
        "public",
        "final"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "o",
          "type": "Object",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Indicates whether some other object is \"equal to\" this one. The objects are equal if the other object is of the same class and if all the record components are equal. All components in this record class are compared with Objects::equals(Object,Object) .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "id",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the value of the id record component.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "callback",
      "modifiers": [
        "public"
      ],
      "annotations": [
        "@Nullable"
      ],
      "return_type": "@Nullable LoadingValidationCallback",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the value of the callback record component.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/world/chunk/TicketController.html"
}