{
  "type": "class",
  "name": "ParticleDescriptionProvider",
  "qualified_name": "net.neoforged.neoforge.common.data.ParticleDescriptionProvider",
  "package": "net.neoforged.neoforge.common.data",
  "modifiers": [
    "public",
    "abstract",
    "class"
  ],
  "annotations": [],
  "description": "A data provider for ParticleDescription s. To use this provider, extend this class and implement addDescriptions() . Then, register an instance using DataGenerator.addProvider(boolean, Factory) via the GatherDataEvent on the mod event bus. A description can be added to a ParticleType which uses a sprite or sprite set . @Override protected void addDescriptions() { // Single sprite this.sprite(ParticleTypes.DRIPPING_LAVA, ResourceLocation.withDefaultNamespace(\"drip_hang\")); // Multiple sprites this.spriteSet(ParticleTypes.CLOUD, ResourceLocation.withDefaultNamespace(\"generic\"), 8, true); } A particle description holds a list of textures used when rendering the particle to the screen. All registered particle descriptions are stitched together into a texture atlas called TextureAtlas.LOCATION_PARTICLES . A ParticleType whose particle uses the texture atlas, typically via the ParticleRenderType , can then reference the necessary texture during rendering. Particles with a particle description must have their particle providers attached to a ParticleType as a sprite or sprite set consumer.",
  "inheritance": {
    "extends": null,
    "implements": [
      "DataProvider"
    ],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "particlesPath",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "PackOutput.PathProvider",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "fileHelper",
      "modifiers": [
        "protected",
        "final"
      ],
      "annotations": [
        "@VisibleForTesting"
      ],
      "type": "ExistingFileHelper",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "descriptions",
      "modifiers": [
        "protected",
        "final"
      ],
      "annotations": [
        "@VisibleForTesting"
      ],
      "type": "Map < ResourceLocation , List < String >>",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ParticleDescriptionProvider",
      "modifiers": [
        "protected"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "output",
          "type": "PackOutput",
          "annotations": []
        },
        {
          "name": "fileHelper",
          "type": "ExistingFileHelper",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Creates an instance of the data provider.",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "addDescriptions",
      "modifiers": [
        "protected",
        "abstract"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [],
      "exceptions": [],
      "description": "Registers the particle descriptions generated by sprite(ParticleType, ResourceLocation) or one of the sprite set methods .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "sprite",
      "modifiers": [
        "protected"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "type",
          "type": "ParticleType <?>",
          "annotations": []
        },
        {
          "name": "texture",
          "type": "ResourceLocation",
          "annotations": []
        }
      ],
      "exceptions": [
        "texture - the texture to render for the particle type"
      ],
      "description": "Creates a new particle description that contains a single texture for the associated ParticleType . Particle types with this description should be attached to a particle provider via RegisterParticleProvidersEvent.registerSprite(ParticleType, ParticleProvider.Sprite) .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "spriteSet",
      "modifiers": [
        "protected"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "type",
          "type": "ParticleType <?>",
          "annotations": []
        },
        {
          "name": "baseName",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "numOfTextures",
          "type": "int",
          "annotations": []
        },
        {
          "name": "reverse",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [
        "baseName - the common name of all the textures"
      ],
      "description": "Creates a new particle description that contains multiple textures for the associated ParticleType . The textures are generated from a common name and appended with a number representing the state of the animation. minecraft:generic_0 minecraft:generic_1 minecraft:generic_2 // ... Particle types with this description should be attached to a particle provider via RegisterParticleProvidersEvent.registerSpriteSet(ParticleType, ParticleEngine.SpriteParticleRegistration) .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "spriteSet",
      "modifiers": [
        "protected"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "type",
          "type": "ParticleType <?>",
          "annotations": []
        },
        {
          "name": "texture",
          "type": "ResourceLocation",
          "annotations": []
        },
        {
          "name": "textures",
          "type": "ResourceLocation ...",
          "annotations": []
        }
      ],
      "exceptions": [
        "texture - the first texture in the description"
      ],
      "description": "Creates a new particle description that contains multiple textures for the associated ParticleType . The textures are passed as varargs with at least one texture present. Particle types with this description should be attached to a particle provider via RegisterParticleProvidersEvent.registerSpriteSet(ParticleType, ParticleEngine.SpriteParticleRegistration) .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "spriteSet",
      "modifiers": [
        "protected"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "type",
          "type": "ParticleType <?>",
          "annotations": []
        },
        {
          "name": "textures",
          "type": "Iterable < ResourceLocation >",
          "annotations": []
        }
      ],
      "exceptions": [
        "textures - a list of textures to render for the particle type"
      ],
      "description": "Creates a new particle description that contains multiple textures for the associated ParticleType . The textures are passed as an iterable. Particle types with this description should be attached to a particle provider via RegisterParticleProvidersEvent.registerSpriteSet(ParticleType, ParticleEngine.SpriteParticleRegistration) .",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "run",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "CompletableFuture <?>",
      "parameters": [
        {
          "name": "cache",
          "type": "CachedOutput",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getName",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "String",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/data/ParticleDescriptionProvider.html"
}