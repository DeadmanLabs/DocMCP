{
  "type": "class",
  "name": "ConditionContext",
  "qualified_name": "net.neoforged.neoforge.common.conditions.ConditionContext",
  "package": "net.neoforged.neoforge.common.conditions",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [
      "ICondition.IContext"
    ],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "tagManager",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "TagManager",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "loadedTags",
      "modifiers": [
        "private"
      ],
      "annotations": [
        "@Nullable"
      ],
      "type": "@Nullable Map < ResourceKey <?>, Map < ResourceLocation , Collection < Holder <?>>>>",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "ConditionContext",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "tagManager",
          "type": "TagManager",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getAllTags",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Map < ResourceLocation , Collection < Holder <T>>>",
      "parameters": [
        {
          "name": "registry",
          "type": "ResourceKey <? extends Registry <T>>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Description copied from interface: ICondition.IContext",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/conditions/ConditionContext.html"
}