{
  "type": "interface",
  "name": "IFriendlyByteBufExtension",
  "qualified_name": "net.neoforged.neoforge.common.extensions.IFriendlyByteBufExtension",
  "package": "net.neoforged.neoforge.common.extensions",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "Additional helper methods for FriendlyByteBuf .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "self",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "return_type": "FriendlyByteBuf",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "writeObjectCollection",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "set",
          "type": "Collection <T>",
          "annotations": []
        },
        {
          "name": "writer",
          "type": "BiConsumer <T, FriendlyByteBuf >",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Writes the entries in the given set to the buffer, by first writing the count and then writing each entry.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "readArray",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "T[]",
      "parameters": [
        {
          "name": "builder",
          "type": "IntFunction <T[]>",
          "annotations": []
        },
        {
          "name": "reader",
          "type": "StreamDecoder <? super FriendlyByteBuf , T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Reads an array of objects from the buffer.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "writeArray",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "FriendlyByteBuf",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "annotations": []
        },
        {
          "name": "writer",
          "type": "StreamEncoder <? super FriendlyByteBuf , T>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Writes an array of objects to the buffer.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "writeByte",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "FriendlyByteBuf",
      "parameters": [
        {
          "name": "value",
          "type": "byte",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Writes a byte to the buffer",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "readMap",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "Map <K, V>",
      "parameters": [
        {
          "name": "keyReader",
          "type": "StreamDecoder <? super FriendlyByteBuf , K>",
          "annotations": []
        },
        {
          "name": "valueReader",
          "type": "BiFunction < FriendlyByteBuf , K, V>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Variant of FriendlyByteBuf.readMap(StreamDecoder, StreamDecoder) that allows reading values that depend on the key.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "writeMap",
      "modifiers": [
        "default"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "map",
          "type": "Map <K, V>",
          "annotations": []
        },
        {
          "name": "keyWriter",
          "type": "StreamEncoder <? super FriendlyByteBuf , K>",
          "annotations": []
        },
        {
          "name": "valueWriter",
          "type": "org.apache.commons.lang3.function.TriConsumer< FriendlyByteBuf , K, V>",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Variant of FriendlyByteBuf.writeMap(Map, StreamEncoder, StreamEncoder) that allows writing values that depend on the key.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/common/extensions/IFriendlyByteBufExtension.html"
}