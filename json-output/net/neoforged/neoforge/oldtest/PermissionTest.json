{
  "type": "class",
  "name": "PermissionTest",
  "qualified_name": "net.neoforged.neoforge.oldtest.PermissionTest",
  "package": "net.neoforged.neoforge.oldtest",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "ENABLED",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "boolean",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "LOGGER",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "org.apache.logging.log4j.Logger",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "boolPerm",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "PermissionNode < Boolean >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "stringPerm",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "PermissionNode < String >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "intPerm",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "PermissionNode < Integer >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "componentPerm",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "PermissionNode < Component >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "unregisteredPerm",
      "modifiers": [
        "private",
        "static",
        "final"
      ],
      "annotations": [],
      "type": "PermissionNode < Boolean >",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "PermissionTest",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "registerNodes",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "event",
          "type": "PermissionGatherEvent.Nodes",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "registerCommands",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "event",
          "type": "RegisterCommandsEvent",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "canUseCommand",
      "modifiers": [
        "private",
        "static"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "src",
          "type": "CommandSourceStack",
          "annotations": []
        },
        {
          "name": "booleanPermission",
          "type": "PermissionNode < Boolean >",
          "annotations": []
        },
        {
          "name": "context",
          "type": "PermissionDynamicContext <?>...",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Simple utility to catch exceptions with the test commands above. Without that, the expected UnregisteredPermissionNode exception, triggers further exceptions and therefore isn't visible anymore. This is only required to handle the intended error in the permission API, and should not be necessary with correct use.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/oldtest/PermissionTest.html"
}