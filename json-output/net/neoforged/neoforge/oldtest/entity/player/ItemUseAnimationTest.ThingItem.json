{
  "type": "class",
  "name": "ItemUseAnimationTest.ThingItem",
  "qualified_name": "net.neoforged.neoforge.oldtest.entity.player.ItemUseAnimationTest.ThingItem",
  "package": "net.neoforged.neoforge.oldtest.entity.player",
  "modifiers": [
    "private",
    "static",
    "class"
  ],
  "annotations": [],
  "description": "",
  "inheritance": {
    "extends": null,
    "implements": [
      "FeatureElement",
      "ItemLike",
      "IItemExtension"
    ],
    "inheritance_tree": [
      "java.lang.Object",
      "net.minecraft.world.item.Item"
    ]
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [
    {
      "name": "ThingItem",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "props",
          "type": "Item.Properties",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getUseAnimation",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "UseAnim",
      "parameters": [
        {
          "name": "stack",
          "type": "ItemStack",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": "getUseAnimation in class Item",
      "since": null,
      "deprecated": false
    },
    {
      "name": "initializeClient",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "consumer",
          "type": "Consumer < IClientItemExtensions >",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": "initializeClient in class Item",
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/oldtest/entity/player/ItemUseAnimationTest.ThingItem.html"
}