{
  "type": "class",
  "name": "AddReloadListenerEvent",
  "qualified_name": "net.neoforged.neoforge.event.AddReloadListenerEvent",
  "package": "net.neoforged.neoforge.event",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "The main ResourceManager is recreated on each reload, just after ReloadableServerResources 's creation. The event is fired on each reload and lets modders add their own ReloadListeners, for server-side resources. The event is fired on the NeoForge.EVENT_BUS",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object"
    ]
  },
  "nested_classes": [
    "AddReloadListenerEvent.WrappedStateAwareListener"
  ],
  "fields": [
    {
      "name": "listeners",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "List < PreparableReloadListener >",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "serverResources",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "ReloadableServerResources",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "registryAccess",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "RegistryAccess",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "AddReloadListenerEvent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "serverResources",
          "type": "ReloadableServerResources",
          "annotations": []
        },
        {
          "name": "registryAccess",
          "type": "RegistryAccess",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "addListener",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "listener",
          "type": "PreparableReloadListener",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getListeners",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "List < PreparableReloadListener >",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getServerResources",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ReloadableServerResources",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getConditionContext",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ICondition.IContext",
      "parameters": [],
      "exceptions": [],
      "description": "This context object holds data relevant to the current reload, such as staged tags.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getRegistryAccess",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "RegistryAccess",
      "parameters": [],
      "exceptions": [],
      "description": "Provides access to the loaded registries associated with these server resources. All built-in and dynamic registries are loaded and frozen by this point.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/event/AddReloadListenerEvent.html"
}