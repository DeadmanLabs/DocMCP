{
  "type": "class",
  "name": "BlockEvent.BlockToolModificationEvent",
  "qualified_name": "net.neoforged.neoforge.event.level.BlockEvent.BlockToolModificationEvent",
  "package": "net.neoforged.neoforge.event.level",
  "modifiers": [
    "public",
    "static",
    "class"
  ],
  "annotations": [],
  "description": "Fired when a block is right-clicked by a tool to change its state. For example: Used to determine if an axe can strip , a shovel can path , or a hoe can till . Care must be taken to ensure level-modifying events are only performed if isSimulated() returns false . This event is ICancellableEvent . If canceled, this will prevent the tool from changing the block's state.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object",
      "net.neoforged.neoforge.event.level.BlockEvent"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "context",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "UseOnContext",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "toolAction",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "ToolAction",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "simulate",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "boolean",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "state",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "type": "BlockState",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "BlockToolModificationEvent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "originalState",
          "type": "BlockState",
          "annotations": []
        },
        {
          "name": "context",
          "type": "UseOnContext",
          "annotations": []
        },
        {
          "name": "toolAction",
          "type": "ToolAction",
          "annotations": []
        },
        {
          "name": "simulate",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getPlayer",
      "modifiers": [
        "public"
      ],
      "annotations": [
        "@Nullable"
      ],
      "return_type": "@Nullable Player",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getHeldItemStack",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ItemStack",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getToolAction",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "ToolAction",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "isSimulated",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [],
      "exceptions": [],
      "description": "Returns true if this event should not perform any actions that modify the level. If false , then level-modifying actions can be performed.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getContext",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "UseOnContext",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the nonnull use on context that this event was performed in.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "setFinalState",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "finalState",
          "type": "BlockState",
          "annotations": [
            "@Nullable",
            "@Nullable"
          ]
        }
      ],
      "exceptions": [],
      "description": "Sets the state to transform the block into after tool use.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getFinalState",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "BlockState",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the state to transform the block into after tool use. If setFinalState(BlockState) is not called, this will return the original state. If ICancellableEvent.isCanceled() is true , this value will be ignored and the tool action will be canceled.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/event/level/BlockEvent.BlockToolModificationEvent.html"
}