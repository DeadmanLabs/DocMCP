{
  "type": "class",
  "name": "PlayerSpawnPhantomsEvent",
  "qualified_name": "net.neoforged.neoforge.event.entity.player.PlayerSpawnPhantomsEvent",
  "package": "net.neoforged.neoforge.event.entity.player",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This event is fired from PhantomSpawner.tick(net.minecraft.server.level.ServerLevel, boolean, boolean) when phantoms would attempt to be spawned, with one event fired per player. It allows controlling if a spawn attempt will be made for the particular player, but cannot guarantee that a Phantom will be spawned. This event is only fired on the logical server.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object",
      "net.neoforged.neoforge.event.entity.EntityEvent",
      "net.neoforged.neoforge.event.entity.living.LivingEvent",
      "net.neoforged.neoforge.event.entity.player.PlayerEvent"
    ]
  },
  "nested_classes": [
    "PlayerSpawnPhantomsEvent.Result"
  ],
  "fields": [
    {
      "name": "phantomsToSpawn",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "type": "int",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "result",
      "modifiers": [
        "private"
      ],
      "annotations": [],
      "type": "PlayerSpawnPhantomsEvent.Result",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "PlayerSpawnPhantomsEvent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "player",
          "type": "Player",
          "annotations": []
        },
        {
          "name": "phantomsToSpawn",
          "type": "int",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "getPhantomsToSpawn",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "int",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "setPhantomsToSpawn",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "phantomsToSpawn",
          "type": "int",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Sets the number of phantoms to be spawned.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "setResult",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "void",
      "parameters": [
        {
          "name": "result",
          "type": "PlayerSpawnPhantomsEvent.Result",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Changes the result of this event, which controls if a spawn attempt will be made.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getResult",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "PlayerSpawnPhantomsEvent.Result",
      "parameters": [],
      "exceptions": [],
      "description": "Returns the result of this event, which controls if a spawn attempt will be made.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "shouldSpawnPhantoms",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [
        {
          "name": "level",
          "type": "ServerLevel",
          "annotations": []
        },
        {
          "name": "pos",
          "type": "BlockPos",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Checks if a spawn attempt should be made by checking the current result and evaluating the vanilla conditions if necessary. Does not check DifficultyInstance.isHarderThan(float) or the player's Stats.TIME_SINCE_REST , as these are checked later.",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/event/entity/player/PlayerSpawnPhantomsEvent.html"
}