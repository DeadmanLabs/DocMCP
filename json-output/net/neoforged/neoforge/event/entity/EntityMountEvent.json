{
  "type": "class",
  "name": "EntityMountEvent",
  "qualified_name": "net.neoforged.neoforge.event.entity.EntityMountEvent",
  "package": "net.neoforged.neoforge.event.entity",
  "modifiers": [
    "public",
    "class"
  ],
  "annotations": [],
  "description": "This event gets fired whenever a entity mounts/dismounts another entity. entityBeingMounted can be null , be sure to check for that. This event is ICancellableEvent . If this event is canceled, the entity does not mount/dismount the other entity. This event does not have a result. invalid reference HasResult This event is fired on the NeoForge.EVENT_BUS .",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": [
      "java.lang.Object",
      "net.neoforged.neoforge.event.entity.EntityEvent"
    ]
  },
  "nested_classes": [],
  "fields": [
    {
      "name": "entityMounting",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "Entity",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "entityBeingMounted",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "Entity",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "level",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "Level",
      "value": null,
      "description": "",
      "deprecated": false
    },
    {
      "name": "isMounting",
      "modifiers": [
        "private",
        "final"
      ],
      "annotations": [],
      "type": "boolean",
      "value": null,
      "description": "",
      "deprecated": false
    }
  ],
  "constructors": [
    {
      "name": "EntityMountEvent",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "parameters": [
        {
          "name": "entityMounting",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "entityBeingMounted",
          "type": "Entity",
          "annotations": []
        },
        {
          "name": "level",
          "type": "Level",
          "annotations": []
        },
        {
          "name": "isMounting",
          "type": "boolean",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "",
      "deprecated": false
    }
  ],
  "methods": [
    {
      "name": "isMounting",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "isDismounting",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "boolean",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getEntityMounting",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Entity",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getEntityBeingMounted",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Entity",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getLevel",
      "modifiers": [
        "public"
      ],
      "annotations": [],
      "return_type": "Level",
      "parameters": [],
      "exceptions": [],
      "description": "",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/event/entity/EntityMountEvent.html"
}