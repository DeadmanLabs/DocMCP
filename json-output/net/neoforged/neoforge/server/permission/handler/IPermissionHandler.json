{
  "type": "interface",
  "name": "IPermissionHandler",
  "qualified_name": "net.neoforged.neoforge.server.permission.handler.IPermissionHandler",
  "package": "net.neoforged.neoforge.server.permission.handler",
  "modifiers": [
    "public",
    "interface"
  ],
  "annotations": [],
  "description": "This is the Heart of the PermissionAPI, it manages PermissionNode s as well as it handles all permission queries. Note: You do not need to implement a PermissionHandler to query for permissions.",
  "inheritance": {
    "extends": null,
    "implements": [],
    "inheritance_tree": []
  },
  "nested_classes": [],
  "fields": [],
  "constructors": [],
  "methods": [
    {
      "name": "getIdentifier",
      "modifiers": [],
      "annotations": [],
      "return_type": "ResourceLocation",
      "parameters": [],
      "exceptions": [],
      "description": "Returns an identifier for the PermissionHandler.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getRegisteredNodes",
      "modifiers": [],
      "annotations": [],
      "return_type": "Set < PermissionNode <?>>",
      "parameters": [],
      "exceptions": [],
      "description": "Returns an unmodifiable view of the collection of registered permission nodes.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getPermission",
      "modifiers": [],
      "annotations": [],
      "return_type": "T",
      "parameters": [
        {
          "name": "player",
          "type": "ServerPlayer",
          "annotations": []
        },
        {
          "name": "node",
          "type": "PermissionNode <T>",
          "annotations": []
        },
        {
          "name": "context",
          "type": "PermissionDynamicContext <?>...",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "Mods must use PermissionAPI.getPermission(ServerPlayer, PermissionNode, PermissionDynamicContext[]) Queries a player's permission for a given node and contexts Warning: PermissionNodes must be registered using the PermissionGatherEvent.Nodes event before querying.",
      "overrides": null,
      "since": null,
      "deprecated": false
    },
    {
      "name": "getOfflinePermission",
      "modifiers": [],
      "annotations": [],
      "return_type": "T",
      "parameters": [
        {
          "name": "player",
          "type": "UUID",
          "annotations": []
        },
        {
          "name": "node",
          "type": "PermissionNode <T>",
          "annotations": []
        },
        {
          "name": "context",
          "type": "PermissionDynamicContext <?>...",
          "annotations": []
        }
      ],
      "exceptions": [],
      "description": "See getPermission(ServerPlayer, PermissionNode, PermissionDynamicContext[])",
      "overrides": null,
      "since": null,
      "deprecated": false
    }
  ],
  "enum_constants": [],
  "since": null,
  "deprecated": false,
  "source_file": "1.21.x-neoforge/net/neoforged/neoforge/server/permission/handler/IPermissionHandler.html"
}